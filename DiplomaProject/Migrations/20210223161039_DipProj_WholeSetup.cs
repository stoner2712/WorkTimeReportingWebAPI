using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DiplomaProject.Migrations
{
    public partial class DipProj_WholeSetup : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Client",
                columns: table => new
                {
                    ClientId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    ClientName = table.Column<string>(type: "text", nullable: true),
                    BuildingNumber = table.Column<string>(type: "text", nullable: true),
                    StreetName = table.Column<string>(type: "text", nullable: true),
                    PostCode = table.Column<string>(type: "text", nullable: true),
                    City = table.Column<string>(type: "text", nullable: true),
                    Country = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Client", x => x.ClientId);
                });

            migrationBuilder.CreateTable(
                name: "Employee",
                columns: table => new
                {
                    EmployeeId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    FirstName = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    LastName = table.Column<string>(type: "text", nullable: true),
                    DateOfBirth = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    BuildingNumber = table.Column<string>(type: "text", nullable: true),
                    StreetName = table.Column<string>(type: "text", nullable: true),
                    PostCode = table.Column<string>(type: "text", nullable: true),
                    City = table.Column<string>(type: "text", nullable: true),
                    Country = table.Column<string>(type: "text", nullable: true),
                    JobTitle = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Employee", x => x.EmployeeId);
                });

            migrationBuilder.CreateTable(
                name: "Project",
                columns: table => new
                {
                    ProjectId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    ProjectName = table.Column<string>(type: "text", nullable: true),
                    PricePerHour = table.Column<decimal>(type: "numeric", nullable: false),
                    ClientId = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Project", x => x.ProjectId);
                    table.ForeignKey(
                        name: "FK_Project_Client_ClientId",
                        column: x => x.ClientId,
                        principalTable: "Client",
                        principalColumn: "ClientId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "EmployeeProject",
                columns: table => new
                {
                    EmployeeId = table.Column<long>(type: "bigint", nullable: false),
                    ProjectId = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EmployeeProject", x => new { x.EmployeeId, x.ProjectId });
                    table.ForeignKey(
                        name: "FK_EmployeeProject_Employee_EmployeeId",
                        column: x => x.EmployeeId,
                        principalTable: "Employee",
                        principalColumn: "EmployeeId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_EmployeeProject_Project_ProjectId",
                        column: x => x.ProjectId,
                        principalTable: "Project",
                        principalColumn: "ProjectId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Invoice",
                columns: table => new
                {
                    InvoiceId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    DateFrom = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    DateTo = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    TotalPrice = table.Column<decimal>(type: "numeric", nullable: false),
                    ProjectId = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Invoice", x => x.InvoiceId);
                    table.ForeignKey(
                        name: "FK_Invoice_Project_ProjectId",
                        column: x => x.ProjectId,
                        principalTable: "Project",
                        principalColumn: "ProjectId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TimeEntry",
                columns: table => new
                {
                    TimeEntryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Date = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    AmountOfHours = table.Column<decimal>(type: "numeric", nullable: false),
                    Comment = table.Column<string>(type: "text", nullable: true),
                    EmployeeId = table.Column<long>(type: "bigint", nullable: false),
                    ProjectId = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TimeEntry", x => x.TimeEntryId);
                    table.ForeignKey(
                        name: "FK_TimeEntry_Employee_EmployeeId",
                        column: x => x.EmployeeId,
                        principalTable: "Employee",
                        principalColumn: "EmployeeId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_TimeEntry_Project_ProjectId",
                        column: x => x.ProjectId,
                        principalTable: "Project",
                        principalColumn: "ProjectId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Client",
                columns: new[] { "ClientId", "BuildingNumber", "City", "ClientName", "Country", "PostCode", "StreetName" },
                values: new object[,]
                {
                    { 1L, "616", "Bergstromberg", "Kreiger LLC", "Tokelau", "77376-6746", "Mueller Valley" },
                    { 73L, "586", "Port Janistown", "Macejkovic, Tromp and Schowalter", "Niger", "21357-3204", "Stoltenberg Meadows" },
                    { 72L, "47088", "Chesterport", "Schmeler, Gerlach and Streich", "Cook Islands", "17061-3130", "Alexandria Views" },
                    { 71L, "36683", "Rebeccaburgh", "Hackett, Marvin and Hane", "Isle of Man", "03375", "Lemuel Passage" },
                    { 70L, "255", "West Jacinto", "Gusikowski Group", "Paraguay", "24863-4550", "Johns Glen" },
                    { 69L, "951", "Williemouth", "Muller - Reynolds", "Guernsey", "99649-8452", "Shyanne Tunnel" },
                    { 68L, "65858", "Pfannerstillfurt", "Huels - Shanahan", "Equatorial Guinea", "33324", "Tony Village" },
                    { 67L, "15048", "Hagenesstad", "Kub Inc", "Bangladesh", "66224", "Isai Ranch" },
                    { 66L, "63981", "Rebekaville", "Hudson Group", "Egypt", "04583", "Ortiz Canyon" },
                    { 65L, "8881", "Marksburgh", "Kuvalis, Bode and Lynch", "Brunei Darussalam", "12116", "McCullough Fields" },
                    { 64L, "67155", "North Nigelshire", "Nolan, Bauch and Dietrich", "Romania", "63957-4447", "Gonzalo Extensions" },
                    { 63L, "882", "Port Kimberlymouth", "Oberbrunner, Langworth and Dibbert", "Belarus", "00194", "Rafaela Shore" },
                    { 62L, "71225", "Ansleyland", "Dietrich - Oberbrunner", "Greenland", "62451-8172", "Klein Parkway" },
                    { 61L, "241", "North Pete", "Jacobi LLC", "Latvia", "47005", "Adrienne Lights" },
                    { 60L, "33281", "Port Malliechester", "Gottlieb, Brekke and Kassulke", "New Caledonia", "26527-6667", "Bogan Overpass" },
                    { 59L, "83802", "Jessicafort", "Zboncak and Sons", "Turkey", "33681", "Parisian Greens" },
                    { 58L, "18857", "Carlosburgh", "Jaskolski and Sons", "Azerbaijan", "95451-0038", "Mandy Parks" },
                    { 57L, "3222", "Deonteview", "Hessel, Hessel and Wilderman", "Nepal", "58376", "Legros Flats" },
                    { 56L, "0523", "Konopelskifurt", "Koepp, Grant and Walter", "El Salvador", "36139", "Lindgren Cliffs" },
                    { 55L, "30715", "Kristinfort", "Toy - Beer", "French Southern Territories", "66802", "Daugherty Port" },
                    { 54L, "272", "Lake Delpha", "Schamberger - Kilback", "Guinea-Bissau", "10808-6112", "Block Neck" },
                    { 53L, "5495", "New Josiah", "Shanahan Inc", "Seychelles", "61448-3279", "Leannon Heights" },
                    { 74L, "6510", "Wayneshire", "Gusikowski, Mante and Rice", "Cameroon", "40369", "Zemlak Burgs" },
                    { 75L, "474", "Buckridgetown", "Schmidt, Gutkowski and Jast", "Cambodia", "65073", "Keebler Springs" },
                    { 76L, "005", "Maggioberg", "Mitchell, Rempel and Walter", "Canada", "84741-7145", "Sydney Center" },
                    { 77L, "7890", "Mikaylamouth", "Kovacek, Green and Swaniawski", "Sierra Leone", "23696", "Clifton Parkway" },
                    { 99L, "514", "West Germainetown", "Schuster and Sons", "Argentina", "80860", "Richmond Canyon" },
                    { 98L, "0730", "Lake Porterfort", "Mills, Legros and Effertz", "Estonia", "56110", "Madilyn Vista" },
                    { 97L, "638", "Chynaburgh", "Armstrong, Hauck and Kohler", "Zimbabwe", "03771-8040", "Goodwin Crossroad" },
                    { 96L, "2240", "Leonorastad", "Pacocha and Sons", "Liechtenstein", "85955", "Hilpert Well" },
                    { 95L, "038", "New Ettieside", "Keeling - Bins", "Luxembourg", "47158", "Eloise Overpass" },
                    { 94L, "464", "Kubstad", "Boehm - Jast", "Mauritania", "15694-7867", "Weissnat Meadow" },
                    { 93L, "8751", "West Marshallborough", "Homenick, Daugherty and Satterfield", "France", "32311-2956", "Tod Loop" },
                    { 92L, "7435", "Mariannashire", "Kuhic, Hane and O'Reilly", "Jamaica", "32796", "Willms Springs" },
                    { 91L, "0496", "North Keltonton", "Krajcik Group", "Norfolk Island", "08652", "Brady Forks" },
                    { 90L, "30153", "Cyrilchester", "Schmidt, Fritsch and Schuppe", "Angola", "25349", "Kelley Camp" },
                    { 52L, "4471", "West Arnulfo", "Keebler - Crooks", "Belgium", "43897", "Marianne Pine" },
                    { 89L, "602", "Hilpertville", "Stoltenberg, Berge and Larkin", "Seychelles", "57991", "Iliana Village" },
                    { 87L, "69998", "Russellshire", "Murazik Group", "Svalbard & Jan Mayen Islands", "74696", "Josiane Fort" },
                    { 86L, "90046", "Pourosburgh", "Wuckert, Donnelly and Yundt", "Tunisia", "32120", "Eloy Flat" },
                    { 85L, "8966", "Schultzburgh", "Gutmann Group", "Macao", "32012", "Laura Burgs" },
                    { 84L, "1053", "Quitzonmouth", "Pfeffer Inc", "Argentina", "12611", "Kutch Harbors" },
                    { 83L, "3728", "Port Ronaldo", "Walker and Sons", "Eritrea", "34502-2715", "Stokes Square" },
                    { 82L, "27633", "East Gerhardfort", "Crona, Kessler and McClure", "Swaziland", "93744", "Stamm Parks" },
                    { 81L, "06070", "Antoninaberg", "Donnelly, Ullrich and Torp", "Costa Rica", "05534-1154", "Haley Brook" },
                    { 80L, "5528", "West Harold", "Ziemann, Mraz and Prosacco", "Saint Martin", "18171-0433", "Louie Well" },
                    { 79L, "56030", "East Freida", "Rolfson, Lueilwitz and Gottlieb", "Luxembourg", "33011-7388", "Jacobs Radial" },
                    { 78L, "00569", "Sagefurt", "Goodwin and Sons", "Lithuania", "58641-2784", "Janie Springs" },
                    { 88L, "8057", "South Maraburgh", "Bradtke Inc", "Azerbaijan", "93394", "Reyes Lodge" },
                    { 51L, "686", "North Mekhimouth", "Barton - Parisian", "Cayman Islands", "12311-7129", "Nathanael Rue" },
                    { 100L, "43860", "South Christfort", "Schneider Inc", "Turks and Caicos Islands", "23121", "Clyde Circle" },
                    { 49L, "167", "Lake Alicia", "Rutherford - Ledner", "Venezuela", "41284-4863", "Alba Fields" },
                    { 22L, "1117", "Powlowskichester", "Christiansen Inc", "Romania", "63218-4421", "Hirthe Corner" },
                    { 21L, "4759", "South Angus", "Haley LLC", "Australia", "69823", "Hills Meadow" },
                    { 20L, "170", "Rosaleechester", "Simonis - Emard", "French Polynesia", "45707", "Bergnaum Drives" },
                    { 19L, "3153", "Legrosside", "Schumm - Marks", "Mongolia", "12567-8839", "Senger Circle" },
                    { 18L, "6800", "Lake Asa", "Runolfsdottir LLC", "Gambia", "55305-9914", "Claud Glen" },
                    { 17L, "3985", "Lake Breannaton", "Weissnat - Ondricka", "New Caledonia", "89068-4036", "Treutel Lake" },
                    { 16L, "93952", "Port Rustyhaven", "Weissnat, Gusikowski and Kihn", "Cote d'Ivoire", "82377", "Blick Tunnel" },
                    { 15L, "31524", "Helenmouth", "Bradtke - Padberg", "Malawi", "74995", "Lakin Freeway" },
                    { 13L, "08432", "Kristofferville", "Blanda - Stark", "Germany", "03797-0610", "Mary Viaduct" },
                    { 12L, "985", "Nicolasside", "Kling, Harris and Schmeler", "Moldova", "21983", "Schuppe Prairie" },
                    { 11L, "70717", "Turnerburgh", "Hane - Mertz", "Turkey", "83226-6520", "Annetta Motorway" },
                    { 10L, "20279", "Joannietown", "Dibbert, D'Amore and Considine", "Morocco", "34405", "Ida River" },
                    { 9L, "54569", "West Fabiola", "Herman - Wiegand", "Libyan Arab Jamahiriya", "66249", "Drake Crescent" },
                    { 8L, "49503", "Kaciton", "Gorczany Group", "Sri Lanka", "62805", "Elsie Trail" },
                    { 7L, "5890", "Lake Jaidamouth", "Goldner, McGlynn and Torp", "Burundi", "06741", "Maida Valleys" },
                    { 6L, "06720", "Noemichester", "Reinger - Blanda", "Saint Pierre and Miquelon", "55544-0639", "Lambert Knolls" },
                    { 5L, "25170", "West Burdette", "Reichel - Stroman", "Gabon", "55620-0677", "Nathan Landing" },
                    { 4L, "162", "Thompsonside", "Bins, Koch and Kertzmann", "Guinea-Bissau", "34149", "Quitzon Shores" },
                    { 3L, "130", "Maggiochester", "Connelly - Oberbrunner", "Mongolia", "60850", "Walker Circle" },
                    { 2L, "023", "West Bernitastad", "Rogahn, McDermott and Marvin", "Finland", "85021", "Pollich Views" },
                    { 50L, "20651", "Christelleport", "Tremblay, Hackett and Nicolas", "Syrian Arab Republic", "31173", "Candida Port" },
                    { 23L, "1262", "Lizaland", "Mante, Swaniawski and Schiller", "Jersey", "35311-9340", "Christop Pass" },
                    { 24L, "44836", "Athenaville", "Crist, Shields and Welch", "South Georgia and the South Sandwich Islands", "82330", "Vincenzo Crossing" },
                    { 14L, "923", "Freddyshire", "Lindgren - Huels", "Brazil", "46132", "Gus Isle" },
                    { 26L, "7399", "Donaldbury", "Moen LLC", "Bulgaria", "46031-0640", "Rice Crest" },
                    { 25L, "28926", "Lake Korbinberg", "West, Powlowski and Price", "Netherlands", "37719-9901", "DuBuque Crescent" },
                    { 47L, "4809", "Deckowmouth", "Stiedemann and Sons", "Cape Verde", "53413-0806", "Santino Spurs" },
                    { 46L, "6714", "Lizziestad", "Lueilwitz Group", "Latvia", "27667-9912", "O'Conner Expressway" },
                    { 45L, "0331", "Bufordstad", "Hermiston, Farrell and Mohr", "Czech Republic", "95252-9282", "Ernser Isle" },
                    { 44L, "809", "Lake Jesse", "Johnson LLC", "Djibouti", "04180", "Ullrich Fall" },
                    { 43L, "4561", "South Mariannechester", "Rippin Inc", "Macao", "14313-6666", "Roberts Ford" },
                    { 42L, "9652", "Barrowsside", "Volkman, Weimann and Littel", "South Georgia and the South Sandwich Islands", "87577", "Junius Row" },
                    { 40L, "7330", "West Eda", "Parisian, Christiansen and Stracke", "Panama", "27364", "Hessel Spur" },
                    { 39L, "619", "New Neomahaven", "Anderson - Walker", "Andorra", "70979", "Zachary Motorway" },
                    { 38L, "725", "Barryhaven", "Pacocha - Toy", "Israel", "63606-9323", "Kyler Gateway" },
                    { 37L, "386", "Lydaview", "Beier, Jones and Weissnat", "Israel", "31730-7806", "Cheyanne Route" },
                    { 41L, "631", "New Amara", "Heathcote, Green and Nolan", "Tunisia", "73792", "Herman Canyon" },
                    { 48L, "0691", "South Jenaside", "Moore - Crooks", "Slovenia", "03819-0880", "Jennifer Track" },
                    { 36L, "33455", "Monserratfurt", "Howell, Wintheiser and Romaguera", "Sierra Leone", "40180", "Koss Circles" },
                    { 28L, "563", "East Abigale", "Towne, Rosenbaum and Turcotte", "Israel", "02984", "Dallin Place" },
                    { 29L, "575", "Lake Hassie", "Langworth LLC", "Solomon Islands", "58871-8269", "Giovanni Roads" },
                    { 30L, "25932", "Kuvalisshire", "Schinner - Bergnaum", "Switzerland", "02710", "McCullough Isle" },
                    { 31L, "5250", "West Gladys", "Hettinger Inc", "Afghanistan", "57640-7833", "Isabelle Corner" },
                    { 27L, "697", "South Efrain", "Terry Group", "Venezuela", "06488-3000", "Daniela Prairie" },
                    { 33L, "66580", "Barrowsland", "Sanford Inc", "Zambia", "62941", "Nienow Station" },
                    { 34L, "50911", "Donnellyborough", "Kshlerin - Schamberger", "Belgium", "01021-9860", "Grady Locks" },
                    { 35L, "4312", "Rubieside", "Lakin, Reilly and Botsford", "El Salvador", "58960", "Fadel Mountains" },
                    { 32L, "09846", "West Joey", "Windler, Terry and Sauer", "Lithuania", "67241", "Ullrich Parks" }
                });

            migrationBuilder.InsertData(
                table: "Employee",
                columns: new[] { "EmployeeId", "BuildingNumber", "City", "Country", "DateOfBirth", "FirstName", "JobTitle", "LastName", "PostCode", "StreetName" },
                values: new object[,]
                {
                    { 64L, "226", "Hesselhaven", "Equatorial Guinea", new DateTime(1955, 4, 28, 14, 13, 16, 656, DateTimeKind.Unspecified).AddTicks(7099), "Diana", "District Division Director", "Bahringer", "86805", "Tyreek Prairie" },
                    { 72L, "1707", "Geovannifort", "Bhutan", new DateTime(1952, 10, 24, 0, 52, 15, 509, DateTimeKind.Unspecified).AddTicks(8098), "Mateo", "Central Interactions Engineer", "Beer", "23557-2415", "Greenholt Mountain" },
                    { 71L, "69501", "South Halside", "Saint Barthelemy", new DateTime(1986, 12, 7, 19, 53, 14, 92, DateTimeKind.Unspecified).AddTicks(1700), "Jimmie", "Future Data Associate", "Wiegand", "95121-9040", "Vita Mountain" },
                    { 70L, "801", "Haagmouth", "Poland", new DateTime(1980, 7, 3, 19, 18, 51, 975, DateTimeKind.Unspecified).AddTicks(3716), "Tianna", "National Accountability Designer", "Trantow", "54161", "Ashley Canyon" },
                    { 69L, "529", "Sisterland", "Bolivia", new DateTime(1972, 7, 16, 17, 25, 58, 415, DateTimeKind.Unspecified).AddTicks(2067), "Mack", "Internal Markets Administrator", "Hilpert", "44695", "Eulah Divide" },
                    { 68L, "242", "Pasqualeberg", "Sierra Leone", new DateTime(1999, 12, 8, 14, 1, 52, 248, DateTimeKind.Unspecified).AddTicks(5126), "Raymond", "International Directives Supervisor", "Jerde", "12005-0095", "Lynch Manors" },
                    { 67L, "197", "Port Torrey", "United Kingdom", new DateTime(1952, 9, 20, 8, 37, 18, 187, DateTimeKind.Unspecified).AddTicks(4855), "Kathryn", "Customer Paradigm Analyst", "Kertzmann", "06338", "Strosin Squares" },
                    { 66L, "31928", "South Shannonton", "Fiji", new DateTime(1986, 10, 10, 16, 8, 47, 375, DateTimeKind.Unspecified).AddTicks(7490), "Greg", "Regional Mobility Executive", "Schoen", "69774-4834", "Parisian Cliff" },
                    { 65L, "7412", "Prosaccoborough", "Saint Vincent and the Grenadines", new DateTime(1974, 4, 19, 3, 46, 58, 126, DateTimeKind.Unspecified).AddTicks(1409), "Hettie", "Principal Quality Producer", "Reynolds", "00925", "Ankunding Green" },
                    { 63L, "99296", "Gradyland", "Peru", new DateTime(1986, 6, 30, 20, 1, 5, 616, DateTimeKind.Unspecified).AddTicks(258), "Orpha", "Lead Implementation Technician", "MacGyver", "85924-4532", "Brent Shores" },
                    { 52L, "09216", "Omermouth", "Angola", new DateTime(1955, 12, 20, 12, 24, 28, 599, DateTimeKind.Unspecified).AddTicks(3373), "Jesus", "Future Optimization Coordinator", "Runolfsson", "73029-9260", "Wilderman Radial" },
                    { 61L, "2968", "Reillystad", "Philippines", new DateTime(1975, 7, 10, 1, 50, 59, 538, DateTimeKind.Unspecified).AddTicks(8965), "Maryse", "Lead Metrics Strategist", "Altenwerth", "88507-6878", "Royal Prairie" },
                    { 60L, "0856", "East Nicolestad", "Uganda", new DateTime(1976, 7, 28, 2, 15, 4, 905, DateTimeKind.Unspecified).AddTicks(8310), "Cloyd", "Legacy Optimization Administrator", "Flatley", "34187-4556", "Ferry Cliffs" },
                    { 59L, "881", "Pouroschester", "Chad", new DateTime(1958, 12, 26, 17, 3, 51, 919, DateTimeKind.Unspecified).AddTicks(4842), "Bernhard", "Corporate Integration Technician", "Jaskolski", "53447-0793", "Harris Plains" },
                    { 58L, "987", "Zettafort", "Guatemala", new DateTime(1994, 10, 16, 15, 30, 22, 542, DateTimeKind.Unspecified).AddTicks(9870), "Dawn", "Human Research Coordinator", "Hilpert", "26013-3081", "Haylee Skyway" },
                    { 57L, "574", "Boscoport", "El Salvador", new DateTime(1957, 11, 26, 8, 33, 43, 481, DateTimeKind.Unspecified).AddTicks(9511), "Mallie", "Direct Accounts Agent", "Bahringer", "86209", "Delta Mount" },
                    { 56L, "75078", "North Francescoshire", "Libyan Arab Jamahiriya", new DateTime(1955, 5, 9, 19, 14, 53, 716, DateTimeKind.Unspecified).AddTicks(8370), "Samara", "Dynamic Factors Strategist", "Bahringer", "81513-2169", "Oberbrunner Forges" },
                    { 55L, "8549", "Robbberg", "British Indian Ocean Territory (Chagos Archipelago)", new DateTime(1987, 11, 5, 4, 15, 12, 238, DateTimeKind.Unspecified).AddTicks(5782), "Birdie", "Direct Markets Associate", "MacGyver", "06279", "Demond Orchard" },
                    { 54L, "34067", "Maximoport", "Equatorial Guinea", new DateTime(1972, 3, 13, 17, 37, 34, 77, DateTimeKind.Unspecified).AddTicks(8992), "Stephanie", "Forward Implementation Consultant", "Spinka", "15324-2427", "Murazik Garden" },
                    { 53L, "3405", "Kreigerbury", "Somalia", new DateTime(1951, 9, 14, 9, 44, 32, 589, DateTimeKind.Unspecified).AddTicks(9860), "Alycia", "Product Paradigm Manager", "Paucek", "03250", "Julian Spur" },
                    { 73L, "20594", "Reichertshire", "South Georgia and the South Sandwich Islands", new DateTime(1958, 2, 22, 15, 46, 57, 779, DateTimeKind.Unspecified).AddTicks(7940), "Sam", "Direct Infrastructure Assistant", "Reilly", "46654", "Spencer Row" },
                    { 62L, "02925", "Hellerchester", "Saint Kitts and Nevis", new DateTime(1954, 8, 16, 14, 20, 47, 771, DateTimeKind.Unspecified).AddTicks(4630), "Ora", "Internal Response Assistant", "Welch", "06596", "Athena Oval" },
                    { 74L, "226", "Billyland", "Uganda", new DateTime(1957, 2, 24, 20, 49, 34, 463, DateTimeKind.Unspecified).AddTicks(9388), "Linnea", "International Response Orchestrator", "Kunde", "12717-5123", "Schroeder Tunnel" },
                    { 98L, "43045", "Zoebury", "Guinea", new DateTime(1993, 7, 5, 2, 48, 25, 946, DateTimeKind.Unspecified).AddTicks(2758), "Derick", "Regional Markets Liaison", "Hand", "46508", "Maynard Meadow" },
                    { 76L, "3299", "Corwinfort", "Taiwan", new DateTime(1957, 7, 28, 20, 27, 28, 288, DateTimeKind.Unspecified).AddTicks(5927), "Serena", "Customer Research Officer", "Deckow", "82570-5338", "Walter River" },
                    { 51L, "726", "Robertamouth", "Eritrea", new DateTime(1996, 12, 1, 13, 52, 12, 105, DateTimeKind.Unspecified).AddTicks(4110), "Lexi", "Dynamic Research Architect", "Schoen", "24672", "Pagac Fords" },
                    { 97L, "8471", "New Brennon", "Slovakia (Slovak Republic)", new DateTime(1968, 1, 20, 6, 49, 59, 470, DateTimeKind.Unspecified).AddTicks(6060), "Allene", "Chief Factors Orchestrator", "Jones", "31747-2448", "Casper Ranch" },
                    { 96L, "5861", "East Raeland", "Norway", new DateTime(1953, 2, 13, 4, 46, 28, 832, DateTimeKind.Unspecified).AddTicks(2225), "Art", "Investor Marketing Assistant", "Schuppe", "59956-7689", "Rodger Village" },
                    { 95L, "81085", "West Amya", "Iran", new DateTime(1961, 2, 16, 17, 14, 36, 812, DateTimeKind.Unspecified).AddTicks(7880), "Armani", "Internal Branding Representative", "Lowe", "56526-3484", "Daugherty Knoll" },
                    { 94L, "131", "South Josuebury", "South Africa", new DateTime(1953, 9, 26, 3, 27, 23, 153, DateTimeKind.Unspecified).AddTicks(7969), "Dewitt", "Dynamic Infrastructure Designer", "Wolff", "55703", "Cole Shore" },
                    { 93L, "24374", "North Pearltown", "Bulgaria", new DateTime(1962, 11, 10, 23, 33, 13, 260, DateTimeKind.Unspecified).AddTicks(5348), "Clark", "District Applications Technician", "Daniel", "51209", "Upton Keys" },
                    { 92L, "77323", "Quincyton", "Lithuania", new DateTime(1993, 12, 18, 1, 57, 17, 466, DateTimeKind.Unspecified).AddTicks(764), "Wyman", "National Directives Orchestrator", "Reichel", "14153-4717", "O'Hara Pike" },
                    { 91L, "1204", "Port Lelia", "Jamaica", new DateTime(1989, 10, 27, 20, 9, 44, 477, DateTimeKind.Unspecified).AddTicks(7862), "Marcelo", "Human Integration Consultant", "Lesch", "67681-9672", "Lester Lake" },
                    { 90L, "7920", "Keyonhaven", "Qatar", new DateTime(1979, 2, 28, 11, 50, 41, 602, DateTimeKind.Unspecified).AddTicks(7670), "Jonathan", "International Response Planner", "Lynch", "88557-0805", "Carter Mountains" },
                    { 89L, "59621", "Abernathyfurt", "Nauru", new DateTime(1952, 8, 5, 12, 40, 41, 712, DateTimeKind.Unspecified).AddTicks(5467), "Hanna", "Future Interactions Producer", "Tillman", "96746", "Tillman Spring" },
                    { 75L, "66465", "Emilymouth", "Morocco", new DateTime(1964, 3, 29, 16, 46, 26, 797, DateTimeKind.Unspecified).AddTicks(4518), "Meda", "Chief Identity Developer", "Dare", "28258", "Darrick Ford" },
                    { 88L, "54883", "Hiltonville", "Turkmenistan", new DateTime(1984, 8, 25, 1, 57, 18, 766, DateTimeKind.Unspecified).AddTicks(90), "Sydni", "Regional Branding Officer", "Olson", "39215", "Dooley Village" },
                    { 86L, "217", "Runolfsdottirville", "Luxembourg", new DateTime(1981, 9, 13, 2, 5, 44, 965, DateTimeKind.Unspecified).AddTicks(4362), "Walton", "Human Brand Manager", "Morar", "69597", "Neha Pine" },
                    { 85L, "21023", "Keeblermouth", "Saint Vincent and the Grenadines", new DateTime(1998, 9, 2, 8, 25, 4, 540, DateTimeKind.Unspecified).AddTicks(60), "Jaylan", "International Factors Producer", "Gorczany", "94372-1704", "Anderson Extension" },
                    { 84L, "446", "DuBuquehaven", "Liberia", new DateTime(1955, 7, 8, 3, 7, 47, 106, DateTimeKind.Unspecified).AddTicks(8661), "Tristian", "Dynamic Optimization Engineer", "Spinka", "26285-7050", "Imelda Springs" },
                    { 83L, "65982", "West Cordie", "New Zealand", new DateTime(1984, 4, 21, 8, 13, 12, 741, DateTimeKind.Unspecified).AddTicks(8146), "Jude", "National Accounts Facilitator", "Simonis", "25475-0332", "Natalia Streets" },
                    { 82L, "94764", "Hermanshire", "Japan", new DateTime(1968, 5, 29, 23, 45, 4, 299, DateTimeKind.Unspecified).AddTicks(6879), "Earnest", "Customer Operations Assistant", "Parker", "03678", "Christian Meadows" },
                    { 81L, "4292", "Rileybury", "Bulgaria", new DateTime(1956, 1, 31, 23, 8, 36, 535, DateTimeKind.Unspecified).AddTicks(6532), "Glennie", "District Response Agent", "D'Amore", "45874", "Declan Isle" },
                    { 80L, "71649", "New Destinyberg", "Indonesia", new DateTime(1995, 12, 22, 3, 9, 46, 918, DateTimeKind.Unspecified).AddTicks(3266), "Madonna", "Lead Program Technician", "Keebler", "78706-6349", "O'Reilly Pike" },
                    { 79L, "1310", "Beauville", "British Indian Ocean Territory (Chagos Archipelago)", new DateTime(1991, 12, 10, 12, 12, 38, 366, DateTimeKind.Unspecified).AddTicks(1746), "Marjory", "Principal Functionality Producer", "Cormier", "40431-4394", "Tremblay Meadow" },
                    { 78L, "36807", "Hickleville", "Benin", new DateTime(1997, 8, 25, 4, 52, 28, 505, DateTimeKind.Unspecified).AddTicks(656), "Adolphus", "Customer Integration Facilitator", "Smith", "65403", "Rippin Stravenue" },
                    { 77L, "93743", "Lawsontown", "Myanmar", new DateTime(1955, 4, 4, 19, 52, 51, 222, DateTimeKind.Unspecified).AddTicks(2477), "Wiley", "Dynamic Solutions Planner", "Swift", "27217", "Cristina Extensions" },
                    { 87L, "45444", "Bayerfurt", "Benin", new DateTime(1962, 8, 4, 21, 42, 12, 190, DateTimeKind.Unspecified).AddTicks(7676), "Ardella", "Direct Program Agent", "Schiller", "32576", "Karlee Islands" },
                    { 50L, "2912", "Leschberg", "Croatia", new DateTime(1973, 8, 13, 0, 35, 32, 812, DateTimeKind.Unspecified).AddTicks(6932), "Rod", "Investor Usability Manager", "Kub", "55788-0924", "Renner Ferry" },
                    { 26L, "06152", "Omariburgh", "Turkmenistan", new DateTime(1966, 11, 2, 6, 14, 4, 604, DateTimeKind.Unspecified).AddTicks(6829), "Arvid", "District Markets Strategist", "Wolff", "93218", "Fadel Meadow" },
                    { 48L, "9827", "Pricemouth", "Canada", new DateTime(1984, 6, 29, 5, 29, 10, 448, DateTimeKind.Unspecified).AddTicks(9066), "Clemens", "Investor Marketing Designer", "Witting", "05308-4251", "Lowe Bridge" },
                    { 20L, "58823", "South Vernerville", "Uruguay", new DateTime(1973, 5, 13, 23, 26, 34, 557, DateTimeKind.Unspecified).AddTicks(6882), "Kaden", "Central Solutions Director", "Kuhlman", "34823", "Doug Fields" },
                    { 19L, "3155", "New Juniortown", "Taiwan", new DateTime(1957, 6, 22, 13, 25, 38, 245, DateTimeKind.Unspecified).AddTicks(2966), "Jerrod", "Investor Infrastructure Consultant", "Kemmer", "16814", "VonRueden Islands" },
                    { 18L, "346", "East Nico", "Cape Verde", new DateTime(1989, 10, 30, 6, 51, 21, 212, DateTimeKind.Unspecified).AddTicks(1864), "Gwendolyn", "Future Research Officer", "Leannon", "99335", "Homenick Street" },
                    { 17L, "37194", "Port Armanifort", "Equatorial Guinea", new DateTime(1961, 10, 26, 3, 35, 4, 515, DateTimeKind.Unspecified).AddTicks(8089), "Lelia", "National Program Associate", "Klein", "58629-8054", "Pfannerstill Lights" },
                    { 16L, "987", "Robynport", "Antarctica (the territory South of 60 deg S)", new DateTime(1998, 9, 13, 2, 31, 6, 642, DateTimeKind.Unspecified).AddTicks(3170), "Ellie", "Senior Optimization Supervisor", "Reynolds", "10097", "Gusikowski Viaduct" },
                    { 15L, "80227", "Ankundingside", "Switzerland", new DateTime(1990, 4, 28, 5, 0, 30, 811, DateTimeKind.Unspecified).AddTicks(3212), "Floy", "Customer Division Planner", "Considine", "16435-8291", "Jude Rest" },
                    { 14L, "23502", "Karlifort", "Malta", new DateTime(1955, 11, 2, 13, 0, 5, 714, DateTimeKind.Unspecified).AddTicks(7229), "Deven", "District Quality Officer", "Casper", "33372-2246", "Kemmer Keys" },
                    { 13L, "23386", "Derrickhaven", "Azerbaijan", new DateTime(1965, 9, 5, 16, 42, 28, 863, DateTimeKind.Unspecified).AddTicks(3168), "Connor", "Product Integration Specialist", "Boyle", "59721", "Friesen Ranch" },
                    { 12L, "08550", "South Rachel", "Myanmar", new DateTime(1982, 2, 2, 5, 41, 49, 724, DateTimeKind.Unspecified).AddTicks(5312), "Flavio", "Product Division Engineer", "McKenzie", "76681-5012", "Quitzon Stream" },
                    { 11L, "50467", "Lehnerside", "Latvia", new DateTime(1989, 1, 24, 13, 45, 16, 135, DateTimeKind.Unspecified).AddTicks(5488), "Lloyd", "Legacy Markets Coordinator", "Hoeger", "12964-4083", "Labadie Rapids" },
                    { 10L, "221", "North Savion", "Uganda", new DateTime(1974, 8, 16, 16, 42, 2, 157, DateTimeKind.Unspecified).AddTicks(1249), "Willy", "Chief Interactions Architect", "Kovacek", "61516", "Haag Harbors" },
                    { 9L, "63612", "Gerardchester", "Hungary", new DateTime(1974, 1, 15, 4, 4, 47, 673, DateTimeKind.Unspecified).AddTicks(5488), "Alta", "Future Operations Planner", "Wehner", "17565", "Mayer Estates" },
                    { 8L, "3122", "Port Jackeline", "Niger", new DateTime(1973, 10, 3, 17, 19, 36, 371, DateTimeKind.Unspecified).AddTicks(4127), "Elisabeth", "Dynamic Division Officer", "Ebert", "75126", "Dejuan Lights" },
                    { 7L, "4997", "New Doyleland", "Syrian Arab Republic", new DateTime(1997, 5, 31, 18, 12, 35, 922, DateTimeKind.Unspecified).AddTicks(5044), "Joana", "Human Mobility Agent", "Schaefer", "17970-6169", "Huels Trafficway" },
                    { 6L, "60197", "West Dorian", "Bangladesh", new DateTime(1952, 2, 4, 6, 33, 48, 901, DateTimeKind.Unspecified).AddTicks(6998), "Earlene", "Product Quality Agent", "Ryan", "51146", "Clifford Mission" },
                    { 5L, "653", "South Ellaborough", "Malta", new DateTime(1972, 6, 24, 9, 48, 49, 968, DateTimeKind.Unspecified).AddTicks(2320), "Amari", "Direct Functionality Planner", "Barrows", "35844", "Teresa Via" },
                    { 4L, "7592", "Port Adan", "Hong Kong", new DateTime(1951, 3, 4, 13, 9, 45, 574, DateTimeKind.Unspecified).AddTicks(2213), "Maritza", "Forward Creative Designer", "Leuschke", "78023-3485", "Simonis Extension" },
                    { 3L, "08958", "Furmanstad", "Ukraine", new DateTime(1964, 8, 25, 22, 53, 10, 401, DateTimeKind.Unspecified).AddTicks(5090), "Geraldine", "International Web Designer", "Hirthe", "24202", "Lubowitz Cliffs" },
                    { 2L, "65061", "West Lylahaven", "Antarctica (the territory South of 60 deg S)", new DateTime(1972, 2, 26, 8, 9, 27, 268, DateTimeKind.Unspecified).AddTicks(23), "Bethany", "Direct Group Orchestrator", "Padberg", "98282-3454", "Kenton Court" },
                    { 1L, "05332", "South Krystinabury", "Christmas Island", new DateTime(1977, 1, 2, 16, 1, 6, 200, DateTimeKind.Unspecified).AddTicks(7407), "Rosendo", "Lead Brand Liaison", "Daniel", "54671-4939", "Kathleen Junction" },
                    { 99L, "259", "Friesenview", "Saudi Arabia", new DateTime(1980, 6, 19, 11, 22, 42, 808, DateTimeKind.Unspecified).AddTicks(2512), "Moises", "Direct Research Representative", "Wintheiser", "24401-3845", "Cremin Throughway" },
                    { 21L, "68658", "Vincenzaborough", "Oman", new DateTime(1979, 6, 22, 5, 19, 47, 225, DateTimeKind.Unspecified).AddTicks(6890), "Carlo", "Corporate Quality Producer", "Miller", "05083", "Bergnaum Manor" },
                    { 22L, "359", "Justicefort", "Saudi Arabia", new DateTime(1950, 1, 30, 23, 41, 13, 967, DateTimeKind.Unspecified).AddTicks(1210), "Kaley", "Internal Research Supervisor", "Lockman", "61646", "Dino Road" },
                    { 23L, "8094", "South Ulicesborough", "Ethiopia", new DateTime(1968, 4, 12, 6, 0, 14, 570, DateTimeKind.Unspecified).AddTicks(7216), "Albertha", "Regional Web Technician", "Stoltenberg", "26741", "Tad Lake" },
                    { 24L, "38945", "Lake Anibalfurt", "Pitcairn Islands", new DateTime(1992, 2, 11, 3, 54, 30, 394, DateTimeKind.Unspecified).AddTicks(560), "Candelario", "Regional Directives Technician", "Heidenreich", "19227-7751", "Wilkinson Walk" },
                    { 47L, "14278", "Schillerberg", "Burkina Faso", new DateTime(1968, 3, 23, 9, 29, 36, 497, DateTimeKind.Unspecified).AddTicks(7227), "Alfonzo", "Senior Solutions Orchestrator", "Kunze", "32736-8808", "Rafael Alley" },
                    { 46L, "116", "Torphyland", "Guadeloupe", new DateTime(1995, 11, 21, 17, 25, 34, 987, DateTimeKind.Unspecified).AddTicks(6128), "Evalyn", "Dynamic Metrics Developer", "Monahan", "68835", "Crist Stream" },
                    { 45L, "31513", "New Pierce", "Macao", new DateTime(1954, 3, 25, 13, 18, 10, 172, DateTimeKind.Unspecified).AddTicks(5306), "Jaycee", "National Paradigm Director", "Marvin", "53398-2661", "Deron Alley" },
                    { 44L, "2511", "Zionshire", "Moldova", new DateTime(1959, 3, 30, 22, 32, 19, 611, DateTimeKind.Unspecified).AddTicks(2298), "Cleora", "Product Research Supervisor", "Thiel", "78776", "Fritsch Bridge" },
                    { 43L, "4664", "Dudleytown", "Afghanistan", new DateTime(1959, 11, 1, 3, 7, 29, 128, DateTimeKind.Unspecified).AddTicks(9713), "Leonard", "National Tactics Officer", "McClure", "91078-6323", "Beer Creek" },
                    { 42L, "89400", "New Antwontown", "Qatar", new DateTime(1989, 8, 1, 16, 15, 10, 309, DateTimeKind.Unspecified).AddTicks(976), "Dorcas", "Human Data Analyst", "Langosh", "49426-8729", "Quitzon Shoals" },
                    { 41L, "987", "Lake Mabelle", "Ecuador", new DateTime(1992, 10, 24, 9, 44, 2, 717, DateTimeKind.Unspecified).AddTicks(8084), "Judah", "Direct Data Specialist", "Cole", "96609-7571", "Jarvis Roads" },
                    { 40L, "86765", "Cormierborough", "Nepal", new DateTime(1982, 12, 29, 12, 49, 1, 743, DateTimeKind.Unspecified).AddTicks(1480), "Danny", "Legacy Accountability Officer", "Frami", "72199-4739", "Lyla Junction" },
                    { 39L, "856", "West Margarett", "Nepal", new DateTime(1955, 2, 13, 17, 16, 56, 871, DateTimeKind.Unspecified).AddTicks(2518), "Kayli", "Dynamic Accountability Officer", "Davis", "26124", "Nola Fort" },
                    { 38L, "27919", "D'Amoreberg", "Micronesia", new DateTime(1989, 10, 9, 7, 11, 48, 563, DateTimeKind.Unspecified).AddTicks(7676), "Kelvin", "Dynamic Mobility Designer", "Schinner", "55856-2174", "Schuppe Estates" },
                    { 49L, "2163", "Ankundingborough", "Monaco", new DateTime(1950, 1, 21, 21, 53, 45, 598, DateTimeKind.Unspecified).AddTicks(5940), "Kiana", "International Identity Developer", "Blanda", "99518", "Madilyn Vista" },
                    { 37L, "90542", "East Joelview", "Svalbard & Jan Mayen Islands", new DateTime(1997, 10, 26, 19, 19, 21, 981, DateTimeKind.Unspecified).AddTicks(4854), "Timothy", "District Division Administrator", "Jones", "40180-2253", "Gudrun Expressway" },
                    { 35L, "22234", "Trudieville", "Macedonia", new DateTime(1952, 1, 16, 20, 20, 26, 584, DateTimeKind.Unspecified).AddTicks(4626), "Kenna", "Forward Solutions Developer", "Russel", "09161", "O'Keefe Forks" },
                    { 34L, "76958", "East Alvena", "Wallis and Futuna", new DateTime(1978, 10, 15, 21, 52, 4, 698, DateTimeKind.Unspecified).AddTicks(1152), "Rosamond", "Global Identity Liaison", "Orn", "08546", "Wehner Greens" },
                    { 33L, "565", "Doyleborough", "Netherlands", new DateTime(1995, 10, 16, 14, 43, 56, 526, DateTimeKind.Unspecified).AddTicks(8760), "Hillard", "Global Implementation Engineer", "Marks", "61100-8498", "Roderick Dam" },
                    { 32L, "328", "North Lennieberg", "Netherlands", new DateTime(1990, 12, 18, 10, 34, 57, 260, DateTimeKind.Unspecified).AddTicks(26), "Royal", "Global Communications Facilitator", "Goodwin", "81513-6414", "Hobart Light" },
                    { 31L, "5681", "Lynchshire", "Belarus", new DateTime(1959, 10, 15, 11, 2, 46, 943, DateTimeKind.Unspecified).AddTicks(4837), "Jarrod", "International Web Analyst", "Cormier", "55303", "Ankunding Fall" },
                    { 30L, "69941", "Mayershire", "Slovenia", new DateTime(1994, 4, 1, 3, 37, 3, 547, DateTimeKind.Unspecified).AddTicks(5914), "Lyla", "Principal Operations Strategist", "Morissette", "04514-4418", "Hagenes Views" },
                    { 29L, "21603", "New Rosemarie", "Belize", new DateTime(1983, 8, 23, 1, 11, 48, 208, DateTimeKind.Unspecified).AddTicks(2978), "Katrina", "Chief Paradigm Administrator", "Yost", "14972-3365", "Alessia Forks" },
                    { 28L, "59152", "Botsfordstad", "Congo", new DateTime(1979, 9, 26, 4, 45, 25, 168, DateTimeKind.Unspecified).AddTicks(4358), "Rashad", "Chief Paradigm Analyst", "Sipes", "96316", "Lorenz Rue" },
                    { 27L, "552", "East Damion", "Mongolia", new DateTime(1986, 9, 7, 9, 42, 44, 584, DateTimeKind.Unspecified).AddTicks(5368), "Keon", "Dynamic Optimization Engineer", "Koelpin", "30248-9484", "Stehr Summit" },
                    { 25L, "771", "Port Janniefurt", "Brazil", new DateTime(1986, 2, 5, 17, 45, 28, 86, DateTimeKind.Unspecified).AddTicks(1512), "Nick", "Central Communications Facilitator", "Koss", "67674", "Brandon Bridge" },
                    { 36L, "281", "West Kole", "Liberia", new DateTime(1953, 2, 20, 11, 33, 41, 789, DateTimeKind.Unspecified).AddTicks(3481), "Richmond", "Direct Group Assistant", "Altenwerth", "93627-9031", "Taya Flats" },
                    { 100L, "940", "New Selina", "Albania", new DateTime(1961, 11, 28, 15, 38, 15, 727, DateTimeKind.Unspecified).AddTicks(3045), "Elwyn", "Global Metrics Consultant", "Weber", "37790-5935", "Hettinger Landing" }
                });

            migrationBuilder.InsertData(
                table: "Project",
                columns: new[] { "ProjectId", "ClientId", "PricePerHour", "ProjectName" },
                values: new object[,]
                {
                    { 98L, 1L, 574.55m, "Organic optimal solution" },
                    { 4L, 75L, 710.15m, "Cross-platform responsive knowledge base" },
                    { 22L, 74L, 781.52m, "Phased reciprocal access" },
                    { 20L, 73L, 502.73m, "Face to face solution-oriented matrices" },
                    { 49L, 72L, 583.55m, "Profit-focused full-range complexity" },
                    { 41L, 72L, 931.39m, "Ergonomic reciprocal flexibility" },
                    { 89L, 70L, 809.49m, "Cross-group explicit system engine" },
                    { 21L, 70L, 556.96m, "Function-based content-based parallelism" },
                    { 8L, 68L, 672.76m, "Profit-focused radical alliance" },
                    { 64L, 64L, 983.10m, "User-centric leading edge contingency" },
                    { 100L, 62L, 708.61m, "User-friendly client-driven framework" },
                    { 81L, 60L, 960.84m, "Synergistic analyzing concept" },
                    { 47L, 56L, 725.88m, "Up-sized object-oriented standardization" },
                    { 99L, 55L, 579.95m, "Switchable attitude-oriented help-desk" },
                    { 83L, 55L, 692.83m, "Intuitive 5th generation paradigm" },
                    { 68L, 55L, 622.72m, "Organic hybrid implementation" },
                    { 90L, 54L, 832.99m, "Multi-lateral human-resource implementation" },
                    { 1L, 54L, 651.13m, "Realigned needs-based monitoring" },
                    { 65L, 53L, 821.60m, "Virtual 6th generation parallelism" },
                    { 19L, 53L, 529.19m, "Realigned reciprocal customer loyalty" },
                    { 15L, 53L, 873.36m, "Horizontal radical conglomeration" },
                    { 5L, 51L, 834.14m, "Phased demand-driven process improvement" },
                    { 2L, 78L, 707.38m, "Adaptive systemic hardware" },
                    { 63L, 46L, 591.87m, "Visionary logistical software" },
                    { 14L, 78L, 531.54m, "Implemented static benchmark" },
                    { 52L, 80L, 514.06m, "Open-architected maximized core" },
                    { 59L, 99L, 628.14m, "Synergized clear-thinking middleware" },
                    { 33L, 98L, 665.37m, "Cloned mobile project" },
                    { 67L, 95L, 794.04m, "Universal executive capability" },
                    { 66L, 92L, 575.53m, "Self-enabling solution-oriented paradigm" },
                    { 96L, 91L, 716.97m, "Compatible logistical structure" },
                    { 29L, 91L, 918.79m, "Quality-focused analyzing migration" },
                    { 74L, 89L, 617.59m, "Pre-emptive global database" },
                    { 18L, 87L, 784.59m, "Multi-layered asynchronous collaboration" },
                    { 17L, 87L, 589.09m, "Synergized actuating analyzer" },
                    { 43L, 86L, 625.23m, "Proactive web-enabled customer loyalty" },
                    { 79L, 85L, 606.44m, "Open-architected composite solution" },
                    { 61L, 85L, 567.99m, "Total reciprocal task-force" },
                    { 56L, 85L, 696.21m, "Assimilated intangible access" },
                    { 71L, 84L, 616.06m, "Up-sized tertiary concept" },
                    { 45L, 84L, 551.50m, "Multi-channelled optimal circuit" },
                    { 40L, 84L, 930.53m, "Centralized directional encryption" },
                    { 37L, 83L, 885.52m, "Enterprise-wide object-oriented instruction set" },
                    { 24L, 82L, 663.35m, "Centralized tangible access" },
                    { 60L, 81L, 931.69m, "Multi-tiered background challenge" },
                    { 50L, 81L, 765.07m, "Vision-oriented local migration" },
                    { 36L, 81L, 643.26m, "Diverse 3rd generation parallelism" },
                    { 34L, 79L, 724.90m, "Centralized 24 hour leverage" },
                    { 80L, 45L, 641.64m, "Sharable real-time array" },
                    { 31L, 45L, 593.99m, "Intuitive secondary data-warehouse" },
                    { 30L, 45L, 822.74m, "Exclusive even-keeled productivity" },
                    { 76L, 23L, 788.21m, "Quality-focused global ability" },
                    { 6L, 23L, 617.97m, "Ergonomic systematic task-force" },
                    { 93L, 21L, 778.56m, "Phased bottom-line complexity" },
                    { 39L, 18L, 694.67m, "User-centric secondary structure" },
                    { 88L, 16L, 760.45m, "Inverse client-server website" },
                    { 94L, 14L, 511.24m, "Cloned eco-centric matrices" },
                    { 82L, 14L, 993.72m, "Streamlined uniform productivity" },
                    { 35L, 12L, 532.84m, "Re-engineered value-added interface" },
                    { 78L, 11L, 877.41m, "Ameliorated bottom-line synergy" },
                    { 9L, 11L, 650.23m, "Enhanced 24/7 productivity" },
                    { 32L, 10L, 528.40m, "Programmable national internet solution" },
                    { 69L, 7L, 858.29m, "Innovative didactic middleware" },
                    { 57L, 7L, 542.79m, "Future-proofed grid-enabled matrix" },
                    { 25L, 6L, 597.05m, "Face to face multi-state knowledge base" },
                    { 10L, 6L, 942.48m, "Devolved explicit productivity" },
                    { 58L, 5L, 534.20m, "Progressive user-facing alliance" },
                    { 72L, 4L, 807.04m, "Switchable 6th generation encoding" },
                    { 70L, 4L, 902.46m, "Focused eco-centric help-desk" },
                    { 46L, 4L, 947.31m, "Universal analyzing benchmark" },
                    { 44L, 4L, 751.79m, "Horizontal attitude-oriented adapter" },
                    { 27L, 2L, 919.98m, "Reverse-engineered tangible hub" },
                    { 26L, 24L, 610.04m, "Persistent impactful capacity" },
                    { 42L, 24L, 534.51m, "Multi-channelled discrete complexity" },
                    { 75L, 25L, 713.06m, "Monitored asymmetric utilisation" },
                    { 28L, 27L, 743.67m, "Proactive encompassing task-force" },
                    { 86L, 44L, 790.62m, "Enterprise-wide contextually-based process improvement" },
                    { 73L, 44L, 754.10m, "Quality-focused local instruction set" },
                    { 23L, 42L, 730.70m, "Versatile high-level Graphical User Interface" },
                    { 3L, 42L, 687.98m, "Enterprise-wide bandwidth-monitored access" },
                    { 84L, 41L, 759.34m, "Front-line multi-tasking Graphic Interface" },
                    { 55L, 40L, 566.76m, "Versatile heuristic toolset" },
                    { 54L, 40L, 845.26m, "Triple-buffered asynchronous project" },
                    { 51L, 39L, 910.65m, "Virtual dedicated project" },
                    { 85L, 38L, 564.99m, "Multi-lateral impactful initiative" },
                    { 48L, 38L, 527.33m, "Multi-lateral fault-tolerant moderator" },
                    { 77L, 99L, 557.40m, "Multi-tiered fault-tolerant support" },
                    { 92L, 37L, 775.56m, "Grass-roots local approach" },
                    { 62L, 36L, 711.87m, "Open-source directional monitoring" },
                    { 38L, 35L, 699.56m, "Upgradable mobile definition" },
                    { 16L, 34L, 782.86m, "Persevering homogeneous implementation" },
                    { 11L, 32L, 541.94m, "Horizontal zero tolerance process improvement" },
                    { 7L, 32L, 942.62m, "Multi-layered systematic definition" },
                    { 53L, 31L, 514.90m, "Innovative clear-thinking encryption" },
                    { 95L, 30L, 683.77m, "Cross-platform national strategy" },
                    { 13L, 30L, 595.11m, "Customizable user-facing collaboration" },
                    { 12L, 29L, 897.77m, "Monitored upward-trending website" },
                    { 97L, 28L, 521.65m, "Reduced real-time artificial intelligence" },
                    { 87L, 37L, 564.96m, "Upgradable eco-centric parallelism" },
                    { 91L, 99L, 938.41m, "Decentralized explicit matrices" }
                });

            migrationBuilder.InsertData(
                table: "EmployeeProject",
                columns: new[] { "EmployeeId", "ProjectId" },
                values: new object[,]
                {
                    { 43L, 98L },
                    { 8L, 83L },
                    { 78L, 38L },
                    { 78L, 47L },
                    { 33L, 16L },
                    { 64L, 81L },
                    { 21L, 11L },
                    { 58L, 53L },
                    { 80L, 53L },
                    { 22L, 100L },
                    { 83L, 8L },
                    { 46L, 12L },
                    { 1L, 12L },
                    { 68L, 21L },
                    { 58L, 21L },
                    { 71L, 41L },
                    { 94L, 97L },
                    { 9L, 97L },
                    { 40L, 41L },
                    { 10L, 28L },
                    { 11L, 28L },
                    { 45L, 28L },
                    { 14L, 86L },
                    { 46L, 4L },
                    { 87L, 2L },
                    { 74L, 2L },
                    { 14L, 2L },
                    { 15L, 26L },
                    { 39L, 83L },
                    { 54L, 14L },
                    { 1L, 62L },
                    { 89L, 83L },
                    { 10L, 86L },
                    { 22L, 77L },
                    { 76L, 31L },
                    { 34L, 3L },
                    { 56L, 15L },
                    { 72L, 84L },
                    { 38L, 84L },
                    { 77L, 19L },
                    { 56L, 19L },
                    { 16L, 54L },
                    { 15L, 54L },
                    { 60L, 54L },
                    { 85L, 65L },
                    { 47L, 1L },
                    { 48L, 1L },
                    { 62L, 51L },
                    { 7L, 90L },
                    { 55L, 90L },
                    { 91L, 85L },
                    { 25L, 48L },
                    { 93L, 48L },
                    { 77L, 68L },
                    { 19L, 92L },
                    { 86L, 92L },
                    { 4L, 83L },
                    { 8L, 87L },
                    { 50L, 87L },
                    { 8L, 62L },
                    { 4L, 14L },
                    { 45L, 86L },
                    { 51L, 56L },
                    { 84L, 67L },
                    { 61L, 35L },
                    { 96L, 37L },
                    { 42L, 37L },
                    { 72L, 66L },
                    { 40L, 66L },
                    { 41L, 29L },
                    { 61L, 29L },
                    { 18L, 9L },
                    { 24L, 74L },
                    { 78L, 56L },
                    { 98L, 79L },
                    { 99L, 32L },
                    { 20L, 32L },
                    { 61L, 79L },
                    { 78L, 79L },
                    { 87L, 79L },
                    { 73L, 69L },
                    { 9L, 57L },
                    { 42L, 44L },
                    { 7L, 82L },
                    { 83L, 57L },
                    { 33L, 82L },
                    { 87L, 6L },
                    { 16L, 67L },
                    { 82L, 94L },
                    { 82L, 6L },
                    { 95L, 39L },
                    { 11L, 60L },
                    { 58L, 94L },
                    { 28L, 82L },
                    { 73L, 82L },
                    { 26L, 59L },
                    { 85L, 44L },
                    { 43L, 82L },
                    { 6L, 24L },
                    { 99L, 67L }
                });

            migrationBuilder.InsertData(
                table: "Invoice",
                columns: new[] { "InvoiceId", "DateFrom", "DateTo", "ProjectId", "TotalPrice" },
                values: new object[,]
                {
                    { 12L, new DateTime(2019, 2, 18, 22, 0, 28, 442, DateTimeKind.Unspecified).AddTicks(9189), new DateTime(2020, 8, 1, 5, 12, 12, 615, DateTimeKind.Unspecified).AddTicks(4811), 90L, 41212.07m },
                    { 74L, new DateTime(2019, 2, 23, 21, 6, 18, 775, DateTimeKind.Unspecified).AddTicks(3697), new DateTime(2020, 3, 6, 0, 13, 39, 909, DateTimeKind.Unspecified).AddTicks(1721), 79L, 94482.57m },
                    { 83L, new DateTime(2019, 2, 8, 8, 32, 47, 755, DateTimeKind.Unspecified).AddTicks(355), new DateTime(2020, 9, 16, 23, 25, 40, 409, DateTimeKind.Unspecified).AddTicks(6415), 86L, 68834.55m },
                    { 87L, new DateTime(2017, 10, 22, 13, 54, 17, 3, DateTimeKind.Unspecified).AddTicks(5870), new DateTime(2020, 4, 19, 21, 29, 28, 228, DateTimeKind.Unspecified).AddTicks(7472), 86L, 67211.22m },
                    { 86L, new DateTime(2017, 6, 29, 14, 54, 1, 836, DateTimeKind.Unspecified).AddTicks(6890), new DateTime(2020, 1, 18, 9, 16, 4, 776, DateTimeKind.Unspecified).AddTicks(7178), 33L, 13097.50m },
                    { 32L, new DateTime(2018, 11, 1, 16, 0, 16, 47, DateTimeKind.Unspecified).AddTicks(799), new DateTime(2020, 4, 15, 4, 59, 8, 81, DateTimeKind.Unspecified).AddTicks(1724), 17L, 37689.37m },
                    { 47L, new DateTime(2019, 4, 8, 5, 17, 14, 619, DateTimeKind.Unspecified).AddTicks(7977), new DateTime(2020, 12, 4, 16, 6, 25, 91, DateTimeKind.Unspecified).AddTicks(8295), 31L, 7261.63m },
                    { 20L, new DateTime(2018, 8, 18, 17, 27, 27, 84, DateTimeKind.Unspecified).AddTicks(4904), new DateTime(2020, 8, 23, 12, 25, 33, 45, DateTimeKind.Unspecified).AddTicks(4573), 17L, 30405.88m },
                    { 34L, new DateTime(2017, 6, 18, 12, 3, 29, 428, DateTimeKind.Unspecified).AddTicks(1742), new DateTime(2020, 1, 31, 9, 7, 18, 396, DateTimeKind.Unspecified).AddTicks(9132), 15L, 91379.39m },
                    { 24L, new DateTime(2018, 10, 24, 11, 40, 41, 545, DateTimeKind.Unspecified).AddTicks(9933), new DateTime(2020, 7, 4, 1, 28, 52, 176, DateTimeKind.Unspecified).AddTicks(3108), 74L, 86251.61m },
                    { 35L, new DateTime(2018, 9, 6, 0, 15, 3, 359, DateTimeKind.Unspecified).AddTicks(5745), new DateTime(2020, 9, 5, 15, 56, 19, 30, DateTimeKind.Unspecified).AddTicks(6627), 74L, 83006.35m },
                    { 73L, new DateTime(2018, 2, 24, 3, 46, 55, 264, DateTimeKind.Unspecified).AddTicks(3982), new DateTime(2020, 6, 20, 5, 20, 58, 113, DateTimeKind.Unspecified).AddTicks(1742), 74L, 80003.07m },
                    { 31L, new DateTime(2019, 12, 27, 10, 45, 19, 148, DateTimeKind.Unspecified).AddTicks(6837), new DateTime(2020, 8, 27, 16, 7, 40, 414, DateTimeKind.Unspecified).AddTicks(6557), 80L, 70049.17m },
                    { 69L, new DateTime(2018, 4, 21, 8, 38, 9, 937, DateTimeKind.Unspecified).AddTicks(7982), new DateTime(2020, 10, 4, 23, 3, 23, 248, DateTimeKind.Unspecified).AddTicks(9999), 79L, 13912.06m },
                    { 100L, new DateTime(2018, 12, 26, 9, 14, 55, 970, DateTimeKind.Unspecified).AddTicks(3720), new DateTime(2020, 12, 17, 8, 46, 37, 326, DateTimeKind.Unspecified).AddTicks(1548), 79L, 72248.53m },
                    { 63L, new DateTime(2019, 3, 11, 16, 39, 39, 108, DateTimeKind.Unspecified).AddTicks(6953), new DateTime(2020, 2, 20, 11, 23, 25, 974, DateTimeKind.Unspecified).AddTicks(198), 15L, 99771.44m },
                    { 9L, new DateTime(2019, 6, 25, 3, 1, 7, 965, DateTimeKind.Unspecified).AddTicks(5990), new DateTime(2020, 12, 24, 15, 49, 9, 0, DateTimeKind.Unspecified).AddTicks(5669), 14L, 54575.94m },
                    { 13L, new DateTime(2019, 2, 22, 11, 29, 53, 452, DateTimeKind.Unspecified).AddTicks(631), new DateTime(2020, 11, 26, 1, 44, 58, 327, DateTimeKind.Unspecified).AddTicks(4579), 68L, 83947.54m },
                    { 25L, new DateTime(2018, 5, 31, 3, 55, 28, 159, DateTimeKind.Unspecified).AddTicks(7457), new DateTime(2020, 1, 22, 12, 56, 30, 393, DateTimeKind.Unspecified).AddTicks(9032), 34L, 54158.40m },
                    { 58L, new DateTime(2017, 10, 26, 10, 4, 46, 682, DateTimeKind.Unspecified).AddTicks(4558), new DateTime(2020, 9, 23, 11, 45, 46, 932, DateTimeKind.Unspecified).AddTicks(5889), 2L, 59004.80m },
                    { 55L, new DateTime(2017, 3, 29, 5, 42, 43, 711, DateTimeKind.Unspecified).AddTicks(2832), new DateTime(2020, 9, 21, 16, 41, 59, 406, DateTimeKind.Unspecified).AddTicks(2245), 34L, 61813.35m },
                    { 33L, new DateTime(2019, 1, 4, 4, 6, 59, 117, DateTimeKind.Unspecified).AddTicks(5351), new DateTime(2020, 8, 9, 3, 58, 46, 86, DateTimeKind.Unspecified).AddTicks(7349), 52L, 84703.06m },
                    { 91L, new DateTime(2019, 9, 28, 23, 19, 24, 463, DateTimeKind.Unspecified).AddTicks(3401), new DateTime(2020, 2, 29, 18, 13, 56, 942, DateTimeKind.Unspecified).AddTicks(611), 4L, 63836.22m },
                    { 64L, new DateTime(2019, 7, 17, 14, 10, 12, 189, DateTimeKind.Unspecified).AddTicks(4746), new DateTime(2020, 8, 7, 16, 45, 14, 261, DateTimeKind.Unspecified).AddTicks(518), 52L, 13406.88m },
                    { 60L, new DateTime(2017, 8, 18, 7, 7, 46, 290, DateTimeKind.Unspecified).AddTicks(5693), new DateTime(2020, 3, 6, 5, 38, 48, 729, DateTimeKind.Unspecified).AddTicks(8580), 36L, 72881.55m },
                    { 45L, new DateTime(2017, 9, 17, 12, 51, 45, 952, DateTimeKind.Unspecified).AddTicks(3157), new DateTime(2020, 6, 21, 8, 55, 17, 820, DateTimeKind.Unspecified).AddTicks(3345), 24L, 76268.07m },
                    { 65L, new DateTime(2017, 1, 17, 18, 6, 0, 121, DateTimeKind.Unspecified).AddTicks(2716), new DateTime(2020, 12, 12, 12, 26, 12, 669, DateTimeKind.Unspecified).AddTicks(9859), 89L, 56702.03m },
                    { 95L, new DateTime(2017, 7, 9, 13, 36, 1, 676, DateTimeKind.Unspecified).AddTicks(3954), new DateTime(2020, 8, 16, 19, 36, 37, 606, DateTimeKind.Unspecified).AddTicks(2448), 8L, 99197.54m },
                    { 61L, new DateTime(2019, 3, 23, 4, 32, 43, 481, DateTimeKind.Unspecified).AddTicks(2774), new DateTime(2020, 10, 20, 9, 24, 3, 191, DateTimeKind.Unspecified).AddTicks(7452), 24L, 94880.89m },
                    { 53L, new DateTime(2018, 12, 9, 2, 6, 27, 59, DateTimeKind.Unspecified).AddTicks(722), new DateTime(2020, 8, 26, 0, 25, 48, 873, DateTimeKind.Unspecified).AddTicks(319), 8L, 20443.21m },
                    { 99L, new DateTime(2018, 9, 18, 0, 58, 8, 463, DateTimeKind.Unspecified).AddTicks(4779), new DateTime(2020, 8, 23, 10, 30, 25, 453, DateTimeKind.Unspecified).AddTicks(2290), 100L, 33282.39m },
                    { 2L, new DateTime(2018, 6, 17, 3, 14, 45, 701, DateTimeKind.Unspecified).AddTicks(955), new DateTime(2020, 4, 12, 6, 27, 22, 704, DateTimeKind.Unspecified).AddTicks(8404), 37L, 41332.10m },
                    { 52L, new DateTime(2018, 3, 5, 19, 44, 15, 708, DateTimeKind.Unspecified).AddTicks(9302), new DateTime(2020, 2, 9, 6, 20, 51, 239, DateTimeKind.Unspecified).AddTicks(1301), 81L, 82646.38m },
                    { 19L, new DateTime(2018, 1, 10, 23, 41, 24, 117, DateTimeKind.Unspecified).AddTicks(6996), new DateTime(2020, 10, 25, 11, 6, 20, 262, DateTimeKind.Unspecified).AddTicks(1819), 37L, 18259.78m },
                    { 72L, new DateTime(2019, 3, 8, 1, 26, 13, 800, DateTimeKind.Unspecified).AddTicks(8672), new DateTime(2020, 8, 1, 16, 12, 21, 626, DateTimeKind.Unspecified).AddTicks(52), 40L, 87255.09m },
                    { 62L, new DateTime(2017, 6, 17, 2, 52, 35, 158, DateTimeKind.Unspecified).AddTicks(1207), new DateTime(2020, 7, 15, 23, 8, 49, 567, DateTimeKind.Unspecified).AddTicks(2060), 47L, 69326.10m },
                    { 79L, new DateTime(2019, 9, 27, 12, 43, 9, 956, DateTimeKind.Unspecified).AddTicks(1201), new DateTime(2020, 7, 29, 15, 26, 29, 785, DateTimeKind.Unspecified).AddTicks(8908), 40L, 85076.17m },
                    { 1L, new DateTime(2018, 2, 10, 12, 15, 32, 531, DateTimeKind.Unspecified).AddTicks(9168), new DateTime(2020, 3, 16, 23, 23, 58, 836, DateTimeKind.Unspecified).AddTicks(6659), 47L, 46608.13m },
                    { 15L, new DateTime(2019, 6, 30, 8, 35, 17, 727, DateTimeKind.Unspecified).AddTicks(5071), new DateTime(2020, 2, 12, 3, 25, 32, 952, DateTimeKind.Unspecified).AddTicks(7853), 71L, 89193.66m },
                    { 44L, new DateTime(2017, 2, 27, 15, 27, 57, 948, DateTimeKind.Unspecified).AddTicks(7199), new DateTime(2020, 4, 20, 14, 36, 28, 172, DateTimeKind.Unspecified).AddTicks(8805), 99L, 24343.75m },
                    { 76L, new DateTime(2019, 6, 25, 5, 36, 55, 659, DateTimeKind.Unspecified).AddTicks(6203), new DateTime(2020, 8, 24, 11, 9, 51, 950, DateTimeKind.Unspecified).AddTicks(9151), 71L, 26243.01m },
                    { 3L, new DateTime(2017, 3, 14, 17, 29, 58, 297, DateTimeKind.Unspecified).AddTicks(6715), new DateTime(2020, 10, 10, 22, 34, 19, 535, DateTimeKind.Unspecified).AddTicks(3430), 34L, 7074.92m },
                    { 37L, new DateTime(2019, 11, 11, 10, 19, 12, 802, DateTimeKind.Unspecified).AddTicks(6024), new DateTime(2020, 11, 6, 16, 11, 57, 625, DateTimeKind.Unspecified).AddTicks(6124), 68L, 83652.80m },
                    { 88L, new DateTime(2017, 1, 21, 22, 35, 22, 633, DateTimeKind.Unspecified).AddTicks(5725), new DateTime(2020, 6, 14, 6, 20, 33, 289, DateTimeKind.Unspecified).AddTicks(4387), 90L, 43524.35m },
                    { 40L, new DateTime(2018, 3, 5, 21, 16, 22, 3, DateTimeKind.Unspecified).AddTicks(6410), new DateTime(2020, 3, 29, 20, 14, 23, 380, DateTimeKind.Unspecified).AddTicks(3975), 22L, 57414.91m },
                    { 38L, new DateTime(2019, 4, 25, 11, 43, 58, 195, DateTimeKind.Unspecified).AddTicks(2587), new DateTime(2020, 12, 27, 22, 3, 40, 616, DateTimeKind.Unspecified).AddTicks(4089), 77L, 20616.04m },
                    { 18L, new DateTime(2018, 12, 18, 17, 43, 10, 871, DateTimeKind.Unspecified).AddTicks(8078), new DateTime(2020, 8, 25, 6, 36, 6, 280, DateTimeKind.Unspecified).AddTicks(1540), 73L, 22154.03m },
                    { 48L, new DateTime(2018, 4, 3, 13, 40, 17, 14, DateTimeKind.Unspecified).AddTicks(7410), new DateTime(2020, 1, 2, 4, 57, 59, 527, DateTimeKind.Unspecified).AddTicks(1286), 69L, 57028.53m },
                    { 97L, new DateTime(2017, 4, 27, 23, 22, 31, 779, DateTimeKind.Unspecified).AddTicks(4837), new DateTime(2020, 3, 25, 18, 18, 1, 375, DateTimeKind.Unspecified).AddTicks(6981), 38L, 81185.12m },
                    { 85L, new DateTime(2017, 8, 3, 5, 7, 45, 155, DateTimeKind.Unspecified).AddTicks(2137), new DateTime(2020, 8, 19, 21, 18, 8, 473, DateTimeKind.Unspecified).AddTicks(2708), 38L, 36466.28m },
                    { 43L, new DateTime(2017, 7, 27, 21, 57, 43, 988, DateTimeKind.Unspecified).AddTicks(4497), new DateTime(2020, 11, 19, 11, 51, 10, 926, DateTimeKind.Unspecified).AddTicks(1244), 26L, 44108.89m },
                    { 80L, new DateTime(2018, 10, 27, 11, 1, 23, 229, DateTimeKind.Unspecified).AddTicks(6348), new DateTime(2020, 10, 13, 14, 32, 28, 578, DateTimeKind.Unspecified).AddTicks(6861), 38L, 82075.56m },
                    { 36L, new DateTime(2017, 9, 5, 12, 46, 16, 478, DateTimeKind.Unspecified).AddTicks(9065), new DateTime(2020, 12, 25, 1, 22, 47, 495, DateTimeKind.Unspecified).AddTicks(1264), 16L, 60861.42m },
                    { 42L, new DateTime(2018, 10, 5, 12, 10, 18, 354, DateTimeKind.Unspecified).AddTicks(191), new DateTime(2020, 1, 4, 14, 12, 42, 959, DateTimeKind.Unspecified).AddTicks(3268), 72L, 96700.99m },
                    { 75L, new DateTime(2019, 8, 26, 21, 24, 23, 434, DateTimeKind.Unspecified).AddTicks(6248), new DateTime(2020, 2, 19, 17, 27, 33, 937, DateTimeKind.Unspecified).AddTicks(4003), 72L, 48058.58m },
                    { 54L, new DateTime(2019, 12, 20, 22, 57, 41, 163, DateTimeKind.Unspecified).AddTicks(9914), new DateTime(2020, 9, 10, 6, 33, 20, 347, DateTimeKind.Unspecified).AddTicks(2781), 11L, 37471.09m },
                    { 98L, new DateTime(2017, 8, 6, 15, 15, 24, 962, DateTimeKind.Unspecified).AddTicks(574), new DateTime(2020, 5, 2, 22, 37, 3, 428, DateTimeKind.Unspecified).AddTicks(4393), 32L, 10317.72m },
                    { 57L, new DateTime(2018, 4, 11, 8, 48, 34, 721, DateTimeKind.Unspecified).AddTicks(1729), new DateTime(2020, 4, 12, 12, 48, 12, 746, DateTimeKind.Unspecified).AddTicks(5117), 35L, 51612.93m },
                    { 21L, new DateTime(2018, 9, 8, 0, 12, 5, 659, DateTimeKind.Unspecified).AddTicks(9146), new DateTime(2020, 1, 4, 8, 55, 8, 650, DateTimeKind.Unspecified).AddTicks(5995), 75L, 30244.55m },
                    { 82L, new DateTime(2017, 9, 6, 23, 7, 23, 535, DateTimeKind.Unspecified).AddTicks(4054), new DateTime(2020, 6, 2, 14, 56, 56, 923, DateTimeKind.Unspecified).AddTicks(2068), 75L, 82549.21m },
                    { 70L, new DateTime(2017, 11, 4, 23, 47, 57, 654, DateTimeKind.Unspecified).AddTicks(485), new DateTime(2020, 2, 7, 14, 25, 9, 616, DateTimeKind.Unspecified).AddTicks(698), 12L, 96705.11m },
                    { 51L, new DateTime(2019, 6, 12, 5, 53, 51, 823, DateTimeKind.Unspecified).AddTicks(1294), new DateTime(2020, 11, 20, 2, 58, 32, 552, DateTimeKind.Unspecified).AddTicks(8832), 12L, 87424.29m },
                    { 94L, new DateTime(2017, 4, 24, 21, 2, 2, 763, DateTimeKind.Unspecified).AddTicks(2801), new DateTime(2020, 7, 25, 4, 15, 0, 886, DateTimeKind.Unspecified).AddTicks(8795), 32L, 56477.90m },
                    { 68L, new DateTime(2019, 3, 26, 19, 13, 3, 481, DateTimeKind.Unspecified).AddTicks(8283), new DateTime(2020, 6, 10, 2, 38, 12, 711, DateTimeKind.Unspecified).AddTicks(6215), 10L, 36159.27m },
                    { 90L, new DateTime(2018, 1, 16, 19, 41, 8, 626, DateTimeKind.Unspecified).AddTicks(2997), new DateTime(2020, 7, 6, 11, 50, 4, 685, DateTimeKind.Unspecified).AddTicks(30), 97L, 94015.76m },
                    { 96L, new DateTime(2017, 3, 18, 13, 21, 34, 169, DateTimeKind.Unspecified).AddTicks(7747), new DateTime(2020, 1, 17, 13, 10, 43, 937, DateTimeKind.Unspecified).AddTicks(913), 75L, 77711.10m },
                    { 30L, new DateTime(2018, 4, 6, 22, 43, 21, 983, DateTimeKind.Unspecified).AddTicks(2158), new DateTime(2020, 3, 26, 9, 22, 5, 786, DateTimeKind.Unspecified).AddTicks(1458), 97L, 46986.51m },
                    { 67L, new DateTime(2017, 8, 21, 19, 33, 53, 469, DateTimeKind.Unspecified).AddTicks(9795), new DateTime(2020, 11, 13, 20, 1, 30, 318, DateTimeKind.Unspecified).AddTicks(5271), 32L, 33443.03m },
                    { 14L, new DateTime(2019, 9, 1, 9, 52, 38, 349, DateTimeKind.Unspecified).AddTicks(6528), new DateTime(2020, 8, 22, 18, 13, 4, 148, DateTimeKind.Unspecified).AddTicks(3422), 97L, 64185.88m },
                    { 89L, new DateTime(2019, 11, 2, 0, 47, 25, 82, DateTimeKind.Unspecified).AddTicks(3365), new DateTime(2020, 12, 4, 23, 6, 46, 750, DateTimeKind.Unspecified).AddTicks(5717), 28L, 48427.38m },
                    { 5L, new DateTime(2019, 12, 19, 11, 48, 5, 445, DateTimeKind.Unspecified).AddTicks(5371), new DateTime(2020, 2, 22, 18, 12, 15, 950, DateTimeKind.Unspecified).AddTicks(117), 69L, 87956.41m },
                    { 10L, new DateTime(2018, 12, 24, 18, 0, 49, 754, DateTimeKind.Unspecified).AddTicks(5380), new DateTime(2020, 9, 19, 23, 17, 32, 751, DateTimeKind.Unspecified).AddTicks(3328), 69L, 25016.93m },
                    { 81L, new DateTime(2019, 3, 14, 21, 29, 6, 897, DateTimeKind.Unspecified).AddTicks(7826), new DateTime(2020, 2, 7, 12, 3, 12, 516, DateTimeKind.Unspecified).AddTicks(953), 73L, 72022.06m },
                    { 84L, new DateTime(2018, 8, 23, 20, 13, 19, 639, DateTimeKind.Unspecified).AddTicks(8460), new DateTime(2020, 10, 1, 9, 41, 34, 484, DateTimeKind.Unspecified).AddTicks(5750), 70L, 94260.29m },
                    { 71L, new DateTime(2019, 11, 10, 12, 11, 33, 757, DateTimeKind.Unspecified).AddTicks(8748), new DateTime(2020, 12, 26, 5, 9, 16, 253, DateTimeKind.Unspecified).AddTicks(2511), 87L, 13624.95m },
                    { 49L, new DateTime(2017, 9, 4, 0, 31, 57, 992, DateTimeKind.Unspecified).AddTicks(1323), new DateTime(2020, 5, 25, 21, 35, 27, 545, DateTimeKind.Unspecified).AddTicks(8087), 92L, 97104.62m },
                    { 22L, new DateTime(2017, 6, 30, 8, 35, 34, 806, DateTimeKind.Unspecified).AddTicks(2719), new DateTime(2020, 3, 17, 4, 20, 49, 532, DateTimeKind.Unspecified).AddTicks(5847), 82L, 94785.16m },
                    { 28L, new DateTime(2019, 4, 21, 6, 10, 30, 758, DateTimeKind.Unspecified).AddTicks(1260), new DateTime(2020, 10, 1, 5, 28, 39, 784, DateTimeKind.Unspecified).AddTicks(2571), 82L, 53739.45m },
                    { 56L, new DateTime(2017, 1, 20, 16, 17, 0, 606, DateTimeKind.Unspecified).AddTicks(1055), new DateTime(2020, 5, 2, 12, 34, 49, 182, DateTimeKind.Unspecified).AddTicks(8956), 82L, 18612.36m },
                    { 93L, new DateTime(2018, 7, 19, 8, 23, 12, 445, DateTimeKind.Unspecified).AddTicks(6633), new DateTime(2020, 11, 7, 16, 28, 3, 641, DateTimeKind.Unspecified).AddTicks(5761), 3L, 61536.78m },
                    { 59L, new DateTime(2017, 8, 18, 3, 20, 18, 184, DateTimeKind.Unspecified).AddTicks(1444), new DateTime(2020, 4, 23, 0, 42, 29, 890, DateTimeKind.Unspecified).AddTicks(6162), 78L, 11365.55m },
                    { 26L, new DateTime(2019, 3, 25, 1, 53, 0, 947, DateTimeKind.Unspecified).AddTicks(8940), new DateTime(2020, 9, 17, 6, 20, 20, 367, DateTimeKind.Unspecified).AddTicks(1591), 94L, 57914.21m },
                    { 92L, new DateTime(2018, 2, 18, 1, 55, 10, 564, DateTimeKind.Unspecified).AddTicks(9742), new DateTime(2020, 1, 20, 13, 2, 1, 836, DateTimeKind.Unspecified).AddTicks(2416), 84L, 65815.73m },
                    { 41L, new DateTime(2017, 9, 14, 19, 18, 54, 577, DateTimeKind.Unspecified).AddTicks(9326), new DateTime(2020, 2, 23, 4, 1, 48, 851, DateTimeKind.Unspecified).AddTicks(9477), 84L, 62159.07m },
                    { 6L, new DateTime(2018, 10, 5, 15, 20, 25, 940, DateTimeKind.Unspecified).AddTicks(9119), new DateTime(2020, 5, 1, 21, 59, 43, 818, DateTimeKind.Unspecified).AddTicks(9002), 55L, 64747.49m },
                    { 78L, new DateTime(2019, 1, 15, 5, 6, 47, 945, DateTimeKind.Unspecified).AddTicks(3047), new DateTime(2020, 9, 16, 17, 48, 8, 490, DateTimeKind.Unspecified).AddTicks(287), 9L, 81312.86m },
                    { 7L, new DateTime(2018, 4, 1, 14, 51, 37, 803, DateTimeKind.Unspecified).AddTicks(1914), new DateTime(2020, 3, 10, 12, 8, 15, 179, DateTimeKind.Unspecified).AddTicks(4306), 54L, 89310.24m },
                    { 11L, new DateTime(2018, 4, 23, 21, 51, 24, 729, DateTimeKind.Unspecified).AddTicks(7945), new DateTime(2020, 12, 15, 3, 15, 40, 403, DateTimeKind.Unspecified).AddTicks(3939), 27L, 26111.29m },
                    { 16L, new DateTime(2017, 7, 2, 1, 35, 37, 670, DateTimeKind.Unspecified).AddTicks(7923), new DateTime(2020, 3, 1, 23, 59, 49, 306, DateTimeKind.Unspecified).AddTicks(9580), 27L, 54732.98m },
                    { 39L, new DateTime(2018, 6, 24, 5, 13, 25, 609, DateTimeKind.Unspecified).AddTicks(2111), new DateTime(2020, 6, 15, 9, 36, 56, 30, DateTimeKind.Unspecified).AddTicks(3217), 92L, 37768.46m },
                    { 46L, new DateTime(2017, 5, 5, 12, 21, 31, 352, DateTimeKind.Unspecified).AddTicks(6221), new DateTime(2020, 5, 5, 10, 45, 1, 71, DateTimeKind.Unspecified).AddTicks(7349), 32L, 93750.71m },
                    { 27L, new DateTime(2017, 3, 18, 2, 1, 45, 718, DateTimeKind.Unspecified).AddTicks(916), new DateTime(2020, 11, 25, 14, 2, 35, 397, DateTimeKind.Unspecified).AddTicks(3031), 93L, 8172.51m },
                    { 77L, new DateTime(2018, 5, 14, 19, 37, 45, 87, DateTimeKind.Unspecified).AddTicks(2306), new DateTime(2020, 2, 6, 11, 40, 0, 658, DateTimeKind.Unspecified).AddTicks(3856), 92L, 60679.10m },
                    { 17L, new DateTime(2017, 9, 24, 4, 49, 50, 489, DateTimeKind.Unspecified).AddTicks(1855), new DateTime(2020, 1, 19, 10, 23, 13, 410, DateTimeKind.Unspecified).AddTicks(4706), 9L, 21438.09m },
                    { 50L, new DateTime(2018, 9, 24, 22, 20, 50, 369, DateTimeKind.Unspecified).AddTicks(6652), new DateTime(2020, 4, 3, 5, 39, 22, 724, DateTimeKind.Unspecified).AddTicks(2019), 6L, 75439.35m },
                    { 29L, new DateTime(2018, 2, 11, 10, 7, 31, 128, DateTimeKind.Unspecified).AddTicks(5162), new DateTime(2020, 4, 12, 19, 9, 54, 680, DateTimeKind.Unspecified).AddTicks(2371), 85L, 31299.70m },
                    { 8L, new DateTime(2017, 6, 16, 10, 11, 10, 404, DateTimeKind.Unspecified).AddTicks(3336), new DateTime(2020, 5, 2, 17, 13, 40, 99, DateTimeKind.Unspecified).AddTicks(9996), 6L, 50135.77m },
                    { 66L, new DateTime(2018, 10, 9, 12, 1, 36, 734, DateTimeKind.Unspecified).AddTicks(1163), new DateTime(2020, 7, 13, 3, 59, 4, 269, DateTimeKind.Unspecified).AddTicks(2555), 9L, 14185.12m },
                    { 4L, new DateTime(2019, 9, 10, 7, 37, 19, 26, DateTimeKind.Unspecified).AddTicks(362), new DateTime(2020, 2, 21, 3, 3, 2, 832, DateTimeKind.Unspecified).AddTicks(7692), 51L, 51657.17m },
                    { 23L, new DateTime(2018, 10, 17, 12, 10, 32, 347, DateTimeKind.Unspecified).AddTicks(5461), new DateTime(2020, 6, 12, 22, 27, 22, 116, DateTimeKind.Unspecified).AddTicks(7258), 46L, 96446.80m }
                });

            migrationBuilder.InsertData(
                table: "TimeEntry",
                columns: new[] { "TimeEntryId", "AmountOfHours", "Comment", "Date", "EmployeeId", "ProjectId" },
                values: new object[,]
                {
                    { 56L, 23m, "Repellendus sunt illo reiciendis eveniet enim modi illo blanditiis iure.", new DateTime(2020, 4, 9, 15, 33, 22, 865, DateTimeKind.Unspecified).AddTicks(2839), 37L, 40L },
                    { 92L, 47m, "Eum magni aperiam eligendi possimus est aliquid esse velit et.", new DateTime(2020, 7, 17, 7, 53, 11, 210, DateTimeKind.Unspecified).AddTicks(4515), 18L, 32L },
                    { 26L, 11m, "Minus facere omnis eum eum illum et veniam at consequatur.", new DateTime(2020, 4, 5, 23, 36, 36, 879, DateTimeKind.Unspecified).AddTicks(1851), 22L, 9L },
                    { 25L, 1m, "Optio qui sint et sint numquam dicta nemo quia dolor.", new DateTime(2020, 6, 17, 8, 25, 6, 914, DateTimeKind.Unspecified).AddTicks(5254), 69L, 40L },
                    { 95L, 29m, "Suscipit aut aspernatur corporis eveniet et qui fugiat eaque iste.", new DateTime(2020, 5, 28, 10, 10, 45, 158, DateTimeKind.Unspecified).AddTicks(1217), 52L, 78L },
                    { 24L, 49m, "Recusandae sint enim magni laborum quia est quia quia ex.", new DateTime(2020, 9, 11, 12, 28, 56, 974, DateTimeKind.Unspecified).AddTicks(6268), 69L, 40L },
                    { 90L, 53m, "Consequatur consequatur aut voluptatem corporis deserunt doloremque iusto cupiditate et.", new DateTime(2020, 4, 7, 2, 59, 9, 37, DateTimeKind.Unspecified).AddTicks(7789), 88L, 40L },
                    { 84L, 0m, "Cumque illo ullam iste doloribus dolorem ab officia qui quia.", new DateTime(2020, 2, 6, 13, 21, 39, 214, DateTimeKind.Unspecified).AddTicks(7282), 62L, 40L },
                    { 30L, 45m, "Porro quia et et aspernatur quia necessitatibus commodi omnis alias.", new DateTime(2020, 12, 11, 2, 26, 17, 870, DateTimeKind.Unspecified).AddTicks(9199), 3L, 37L },
                    { 29L, 25m, "Mollitia repudiandae velit et et saepe et velit est eos.", new DateTime(2020, 3, 24, 14, 48, 4, 411, DateTimeKind.Unspecified).AddTicks(3494), 56L, 58L },
                    { 63L, 22m, "Aut tempore in quaerat suscipit nihil qui sed aut quia.", new DateTime(2020, 12, 4, 16, 52, 14, 978, DateTimeKind.Unspecified).AddTicks(1424), 61L, 10L },
                    { 74L, 54m, "Consectetur non libero omnis vero totam est assumenda recusandae voluptatibus.", new DateTime(2020, 11, 4, 9, 8, 9, 395, DateTimeKind.Unspecified).AddTicks(3894), 45L, 59L },
                    { 71L, 32m, "Enim omnis ratione quidem omnis ea non error optio possimus.", new DateTime(2020, 7, 12, 17, 42, 20, 500, DateTimeKind.Unspecified).AddTicks(30), 43L, 59L },
                    { 45L, 14m, "Possimus voluptatem voluptatem libero consequatur autem qui distinctio illum qui.", new DateTime(2020, 8, 12, 0, 25, 19, 572, DateTimeKind.Unspecified).AddTicks(5672), 8L, 98L },
                    { 89L, 57m, "Nisi ex animi voluptatem voluptas ipsam cupiditate quasi est in.", new DateTime(2020, 11, 30, 2, 50, 56, 595, DateTimeKind.Unspecified).AddTicks(5895), 60L, 98L },
                    { 83L, 28m, "Facere aliquam suscipit voluptatem nam beatae aspernatur mollitia aut commodi.", new DateTime(2020, 9, 13, 8, 24, 16, 815, DateTimeKind.Unspecified).AddTicks(6622), 28L, 67L },
                    { 46L, 0m, "Doloremque sunt molestiae a earum consequuntur consequatur laudantium nisi facere.", new DateTime(2020, 3, 17, 12, 56, 42, 73, DateTimeKind.Unspecified).AddTicks(996), 1L, 67L },
                    { 19L, 43m, "Sed perferendis quia qui aut nobis eum deleniti et sit.", new DateTime(2020, 2, 18, 8, 15, 37, 620, DateTimeKind.Unspecified).AddTicks(6909), 1L, 67L },
                    { 4L, 15m, "Incidunt qui totam temporibus ut nihil ut voluptatem explicabo dolor.", new DateTime(2020, 4, 7, 10, 25, 32, 790, DateTimeKind.Unspecified).AddTicks(2417), 26L, 67L },
                    { 60L, 46m, "Quae quod sint corporis corporis ipsum ut est maiores nam.", new DateTime(2020, 4, 29, 9, 11, 12, 826, DateTimeKind.Unspecified).AddTicks(9835), 59L, 44L },
                    { 65L, 7m, "Quam ut non mollitia nemo culpa odit ullam quia rerum.", new DateTime(2020, 1, 12, 8, 29, 42, 637, DateTimeKind.Unspecified).AddTicks(8339), 40L, 66L },
                    { 93L, 55m, "Fugiat id ducimus dignissimos quo assumenda dolorem sequi unde voluptatem.", new DateTime(2020, 12, 3, 2, 32, 40, 972, DateTimeKind.Unspecified).AddTicks(7246), 36L, 46L },
                    { 52L, 44m, "Enim quia atque architecto id fugit enim a quae ex.", new DateTime(2020, 4, 26, 11, 45, 57, 149, DateTimeKind.Unspecified).AddTicks(2303), 21L, 96L },
                    { 66L, 54m, "Fugiat est eveniet quasi quia doloribus ad eaque animi ullam.", new DateTime(2020, 7, 13, 8, 19, 51, 506, DateTimeKind.Unspecified).AddTicks(5801), 29L, 29L },
                    { 40L, 11m, "Est tempore sunt exercitationem ad accusantium itaque commodi non magnam.", new DateTime(2020, 9, 10, 23, 24, 7, 505, DateTimeKind.Unspecified).AddTicks(559), 41L, 29L },
                    { 8L, 40m, "Voluptates est repudiandae possimus amet voluptate dolores fuga eius esse.", new DateTime(2020, 4, 13, 15, 28, 46, 286, DateTimeKind.Unspecified).AddTicks(9007), 45L, 29L },
                    { 43L, 5m, "Vero eveniet quis tempora qui facilis assumenda explicabo quo nemo.", new DateTime(2020, 8, 17, 12, 34, 0, 303, DateTimeKind.Unspecified).AddTicks(1768), 10L, 70L },
                    { 61L, 60m, "Neque voluptatum unde quibusdam optio incidunt tenetur vitae aut eveniet.", new DateTime(2020, 11, 24, 13, 7, 56, 934, DateTimeKind.Unspecified).AddTicks(3358), 90L, 74L },
                    { 44L, 18m, "Fugit totam et aut ea sapiente ut repellendus autem eum.", new DateTime(2020, 4, 19, 12, 15, 34, 694, DateTimeKind.Unspecified).AddTicks(6490), 64L, 74L },
                    { 23L, 23m, "Sint et et id numquam ullam porro itaque odio tenetur.", new DateTime(2020, 5, 29, 16, 23, 2, 24, DateTimeKind.Unspecified).AddTicks(5839), 21L, 74L },
                    { 73L, 6m, "Quas consectetur vero placeat maxime reiciendis sint debitis libero laboriosam.", new DateTime(2020, 1, 15, 11, 27, 33, 852, DateTimeKind.Unspecified).AddTicks(6593), 17L, 70L },
                    { 2L, 51m, "Illo sequi minima quidem aliquid voluptatum odio perferendis nostrum perferendis.", new DateTime(2020, 8, 15, 10, 1, 59, 648, DateTimeKind.Unspecified).AddTicks(2380), 25L, 72L },
                    { 58L, 3m, "Sequi assumenda ea optio consequatur corrupti et alias repellendus reiciendis.", new DateTime(2020, 12, 20, 18, 17, 26, 250, DateTimeKind.Unspecified).AddTicks(2399), 31L, 18L },
                    { 18L, 4m, "Praesentium omnis consectetur quo quidem non autem eaque eius et.", new DateTime(2020, 7, 31, 15, 33, 35, 387, DateTimeKind.Unspecified).AddTicks(5254), 92L, 17L },
                    { 76L, 14m, "Nobis nulla doloremque sint aspernatur eveniet odit reprehenderit libero aliquid.", new DateTime(2020, 5, 10, 23, 45, 8, 686, DateTimeKind.Unspecified).AddTicks(5078), 18L, 58L },
                    { 35L, 46m, "Delectus nihil expedita voluptate nemo sequi omnis placeat consequatur reiciendis.", new DateTime(2020, 12, 11, 9, 53, 39, 253, DateTimeKind.Unspecified).AddTicks(3659), 54L, 79L },
                    { 5L, 26m, "Et in ut omnis ea et reiciendis sunt ut illum.", new DateTime(2020, 6, 19, 12, 27, 50, 214, DateTimeKind.Unspecified).AddTicks(1762), 88L, 79L },
                    { 62L, 15m, "Sunt nulla est molestias neque eos tenetur ipsa inventore consequatur.", new DateTime(2020, 5, 11, 6, 47, 53, 380, DateTimeKind.Unspecified).AddTicks(4), 87L, 10L },
                    { 50L, 38m, "Non et fuga iusto veniam repudiandae illum dolor sit culpa.", new DateTime(2020, 8, 31, 21, 27, 22, 557, DateTimeKind.Unspecified).AddTicks(5720), 92L, 56L },
                    { 67L, 50m, "Dolor dolores voluptatibus culpa cum est repellendus totam adipisci aut.", new DateTime(2020, 10, 10, 21, 46, 38, 816, DateTimeKind.Unspecified).AddTicks(7204), 79L, 24L },
                    { 34L, 36m, "Quae fugiat vero enim autem voluptates mollitia sapiente laboriosam provident.", new DateTime(2020, 5, 9, 16, 23, 46, 315, DateTimeKind.Unspecified).AddTicks(699), 88L, 76L },
                    { 57L, 48m, "Doloribus hic qui at aut delectus illo sit ipsa ipsam.", new DateTime(2020, 12, 6, 2, 39, 37, 623, DateTimeKind.Unspecified).AddTicks(8143), 7L, 60L },
                    { 41L, 2m, "Quisquam est minima qui vitae asperiores necessitatibus enim iste odit.", new DateTime(2020, 12, 22, 6, 50, 34, 992, DateTimeKind.Unspecified).AddTicks(3204), 69L, 47L },
                    { 33L, 14m, "Ea voluptate velit quasi nostrum mollitia minima occaecati illo ex.", new DateTime(2020, 7, 10, 16, 5, 32, 985, DateTimeKind.Unspecified).AddTicks(8558), 12L, 11L },
                    { 97L, 26m, "Voluptates ut aut quibusdam commodi soluta illum odio modi quae.", new DateTime(2020, 11, 9, 15, 43, 57, 638, DateTimeKind.Unspecified).AddTicks(633), 56L, 16L },
                    { 31L, 39m, "Magni sed consequatur velit praesentium eum reprehenderit quia nesciunt dolor.", new DateTime(2020, 8, 8, 14, 44, 10, 970, DateTimeKind.Unspecified).AddTicks(4107), 5L, 83L },
                    { 22L, 59m, "Quia quia nihil reiciendis iste beatae fuga minus quibusdam consequuntur.", new DateTime(2020, 9, 10, 17, 5, 50, 726, DateTimeKind.Unspecified).AddTicks(8864), 14L, 83L },
                    { 36L, 15m, "Sed nemo autem autem dolores odit quia ea dolore ut.", new DateTime(2020, 9, 14, 7, 20, 22, 21, DateTimeKind.Unspecified).AddTicks(2121), 26L, 62L },
                    { 96L, 13m, "Qui quo laboriosam nemo et omnis dolor aut id aspernatur.", new DateTime(2020, 8, 14, 22, 11, 13, 800, DateTimeKind.Unspecified).AddTicks(3119), 27L, 68L },
                    { 49L, 18m, "Aut excepturi distinctio cumque delectus vel eos repudiandae at velit.", new DateTime(2020, 11, 15, 3, 3, 18, 80, DateTimeKind.Unspecified).AddTicks(4837), 95L, 68L },
                    { 55L, 30m, "Debitis occaecati ut nihil natus fuga aperiam soluta voluptas magni.", new DateTime(2020, 6, 12, 18, 35, 52, 753, DateTimeKind.Unspecified).AddTicks(1906), 42L, 90L },
                    { 21L, 5m, "Omnis quos in illo praesentium molestiae id id omnis amet.", new DateTime(2020, 6, 22, 20, 9, 44, 916, DateTimeKind.Unspecified).AddTicks(9712), 52L, 90L },
                    { 94L, 35m, "Labore ipsam voluptatem beatae illo et illo reprehenderit eum dolor.", new DateTime(2020, 1, 22, 19, 42, 39, 258, DateTimeKind.Unspecified).AddTicks(4374), 65L, 92L },
                    { 27L, 11m, "Et impedit inventore illum quo est et doloribus aperiam similique.", new DateTime(2020, 10, 14, 15, 33, 25, 613, DateTimeKind.Unspecified).AddTicks(8106), 22L, 48L },
                    { 51L, 43m, "Qui molestiae officiis omnis distinctio ipsa quam non voluptas harum.", new DateTime(2020, 4, 27, 8, 46, 2, 135, DateTimeKind.Unspecified).AddTicks(2775), 54L, 47L },
                    { 87L, 9m, "Fugit magni sed ut possimus provident omnis nesciunt omnis ipsum.", new DateTime(2020, 6, 2, 3, 58, 25, 464, DateTimeKind.Unspecified).AddTicks(4368), 81L, 85L },
                    { 98L, 24m, "Ad omnis similique minima fuga dolorem consequatur fugit voluptas suscipit.", new DateTime(2020, 1, 2, 18, 39, 22, 672, DateTimeKind.Unspecified).AddTicks(2291), 29L, 65L },
                    { 1L, 55m, "Ducimus provident esse voluptatum quos modi culpa necessitatibus omnis optio.", new DateTime(2020, 2, 21, 6, 6, 53, 501, DateTimeKind.Unspecified).AddTicks(4085), 65L, 65L },
                    { 47L, 4m, "Occaecati et mollitia nam aperiam provident suscipit qui ipsa molestiae.", new DateTime(2020, 10, 30, 10, 14, 3, 633, DateTimeKind.Unspecified).AddTicks(1265), 34L, 51L },
                    { 39L, 34m, "Praesentium iure ratione eligendi sint commodi soluta quos repellendus asperiores.", new DateTime(2020, 6, 9, 10, 25, 34, 281, DateTimeKind.Unspecified).AddTicks(8852), 13L, 19L },
                    { 86L, 1m, "Doloremque dolor voluptatibus laborum nesciunt quo expedita rerum excepturi incidunt.", new DateTime(2020, 7, 3, 12, 1, 47, 440, DateTimeKind.Unspecified).AddTicks(4352), 50L, 54L },
                    { 53L, 48m, "Dolores vitae temporibus voluptate inventore quam laudantium non sed reprehenderit.", new DateTime(2020, 6, 24, 22, 12, 18, 193, DateTimeKind.Unspecified).AddTicks(3644), 2L, 63L },
                    { 38L, 18m, "Totam aut id consequatur quia aliquid molestiae aperiam sequi quas.", new DateTime(2020, 11, 1, 15, 46, 25, 775, DateTimeKind.Unspecified).AddTicks(5016), 26L, 84L },
                    { 59L, 50m, "Veritatis sapiente laboriosam neque optio incidunt eligendi saepe cum iste.", new DateTime(2020, 4, 9, 18, 2, 10, 344, DateTimeKind.Unspecified).AddTicks(7266), 93L, 31L },
                    { 7L, 54m, "Aut cum error odit quis necessitatibus voluptatem incidunt sunt exercitationem.", new DateTime(2020, 6, 8, 12, 47, 36, 78, DateTimeKind.Unspecified).AddTicks(7162), 11L, 3L },
                    { 10L, 18m, "Ut ut id consectetur eveniet consequuntur labore eveniet sed esse.", new DateTime(2020, 3, 4, 12, 42, 34, 530, DateTimeKind.Unspecified).AddTicks(3215), 93L, 3L },
                    { 78L, 41m, "Fuga repellat quisquam necessitatibus aut quos vitae dicta hic non.", new DateTime(2020, 11, 1, 10, 27, 59, 36, DateTimeKind.Unspecified).AddTicks(6825), 50L, 86L },
                    { 91L, 46m, "Ut sed doloremque ad dolorum vel vel quam similique corrupti.", new DateTime(2020, 8, 8, 15, 34, 57, 799, DateTimeKind.Unspecified).AddTicks(5508), 100L, 23L },
                    { 3L, 20m, "Repudiandae quia praesentium qui voluptas quo voluptatem error et aut.", new DateTime(2020, 10, 28, 9, 38, 20, 635, DateTimeKind.Unspecified).AddTicks(8174), 8L, 51L },
                    { 20L, 18m, "Velit atque nihil temporibus accusantium corporis corporis qui dolores aut.", new DateTime(2020, 8, 28, 10, 12, 32, 248, DateTimeKind.Unspecified).AddTicks(7499), 34L, 24L },
                    { 12L, 21m, "Qui eos aliquid omnis ut velit quisquam tenetur cum quaerat.", new DateTime(2020, 3, 12, 20, 20, 31, 649, DateTimeKind.Unspecified).AddTicks(4120), 39L, 53L },
                    { 6L, 30m, "Cupiditate rem error voluptas non dolor repellendus ratione unde ducimus.", new DateTime(2020, 7, 10, 4, 46, 38, 584, DateTimeKind.Unspecified).AddTicks(505), 18L, 12L },
                    { 17L, 51m, "Quia voluptatibus asperiores quos numquam deserunt quidem quisquam dolorum cum.", new DateTime(2020, 6, 14, 6, 49, 9, 633, DateTimeKind.Unspecified).AddTicks(9823), 59L, 50L },
                    { 85L, 34m, "Fugiat at officia aspernatur at quaerat voluptatum quidem velit tempora.", new DateTime(2020, 4, 27, 11, 23, 18, 642, DateTimeKind.Unspecified).AddTicks(6574), 85L, 36L },
                    { 81L, 10m, "Molestiae est nam autem officia omnis est tempora saepe sed.", new DateTime(2020, 8, 28, 12, 45, 48, 47, DateTimeKind.Unspecified).AddTicks(9603), 38L, 52L },
                    { 99L, 27m, "Quas repellat eaque modi ab qui molestiae assumenda facere quo.", new DateTime(2020, 4, 23, 7, 6, 59, 252, DateTimeKind.Unspecified).AddTicks(8039), 41L, 94L },
                    { 69L, 23m, "Earum harum enim accusantium consequatur ad occaecati dolorem expedita illum.", new DateTime(2020, 11, 6, 14, 3, 43, 776, DateTimeKind.Unspecified).AddTicks(3730), 98L, 93L },
                    { 32L, 59m, "Voluptas officia distinctio corrupti atque pariatur nihil quis labore aut.", new DateTime(2020, 5, 20, 13, 51, 36, 888, DateTimeKind.Unspecified).AddTicks(9856), 55L, 6L },
                    { 70L, 22m, "Blanditiis rerum veniam explicabo dolores consequatur laboriosam quo consequuntur quia.", new DateTime(2020, 2, 7, 1, 27, 47, 83, DateTimeKind.Unspecified).AddTicks(3225), 18L, 6L },
                    { 64L, 58m, "Assumenda sit ea sunt vel rerum animi qui saepe vitae.", new DateTime(2020, 10, 25, 9, 50, 38, 991, DateTimeKind.Unspecified).AddTicks(1772), 28L, 76L },
                    { 42L, 59m, "Explicabo maxime debitis accusantium expedita labore molestiae atque non sapiente.", new DateTime(2020, 8, 15, 8, 18, 11, 475, DateTimeKind.Unspecified).AddTicks(7004), 56L, 42L },
                    { 77L, 44m, "Quaerat debitis corporis nesciunt tempora dolores sit eos est iusto.", new DateTime(2020, 5, 19, 16, 13, 57, 615, DateTimeKind.Unspecified).AddTicks(2653), 33L, 42L },
                    { 100L, 8m, "Quos exercitationem placeat voluptatum possimus assumenda id voluptas provident voluptatibus.", new DateTime(2020, 5, 30, 16, 53, 21, 81, DateTimeKind.Unspecified).AddTicks(4250), 5L, 4L },
                    { 72L, 53m, "Aut ex amet consectetur laborum itaque temporibus exercitationem et laboriosam.", new DateTime(2020, 12, 14, 7, 4, 43, 932, DateTimeKind.Unspecified).AddTicks(7976), 91L, 4L },
                    { 13L, 58m, "Dolore amet ea repellendus est reiciendis aspernatur odit sed voluptatem.", new DateTime(2020, 11, 10, 17, 39, 28, 399, DateTimeKind.Unspecified).AddTicks(1058), 40L, 95L },
                    { 68L, 28m, "Optio voluptas quia neque aut quo nemo et sit quia.", new DateTime(2020, 11, 10, 3, 38, 53, 614, DateTimeKind.Unspecified).AddTicks(5864), 44L, 4L },
                    { 37L, 24m, "Quasi debitis adipisci ut expedita occaecati iste ut optio nihil.", new DateTime(2020, 8, 22, 7, 40, 22, 178, DateTimeKind.Unspecified).AddTicks(503), 81L, 20L },
                    { 14L, 7m, "In sint reiciendis cumque non necessitatibus quas qui et autem.", new DateTime(2020, 12, 2, 20, 6, 50, 788, DateTimeKind.Unspecified).AddTicks(4849), 79L, 20L },
                    { 11L, 29m, "Praesentium voluptatem expedita sunt labore modi vel repellendus eligendi illum.", new DateTime(2020, 5, 25, 8, 58, 12, 554, DateTimeKind.Unspecified).AddTicks(8927), 22L, 20L },
                    { 88L, 3m, "Vero architecto impedit harum distinctio voluptatem natus ea tempora alias.", new DateTime(2020, 7, 15, 20, 37, 47, 632, DateTimeKind.Unspecified).AddTicks(4877), 24L, 49L },
                    { 82L, 36m, "Fuga ipsa ratione magnam ad quaerat pariatur ea earum vel.", new DateTime(2020, 6, 8, 9, 5, 35, 446, DateTimeKind.Unspecified).AddTicks(3149), 79L, 49L },
                    { 48L, 27m, "Est dolorem minus molestiae facere ut facere et blanditiis tempore.", new DateTime(2020, 11, 6, 17, 7, 31, 435, DateTimeKind.Unspecified).AddTicks(3324), 80L, 49L },
                    { 80L, 50m, "Labore deserunt officia soluta et nihil voluptas tempore harum nostrum.", new DateTime(2020, 3, 20, 5, 29, 20, 642, DateTimeKind.Unspecified).AddTicks(8566), 46L, 89L },
                    { 54L, 0m, "Minus asperiores eveniet vel mollitia vitae accusamus eligendi explicabo voluptas.", new DateTime(2020, 3, 21, 6, 27, 44, 538, DateTimeKind.Unspecified).AddTicks(7594), 96L, 21L },
                    { 16L, 17m, "Voluptatem doloremque nesciunt quis veniam id autem omnis minima est.", new DateTime(2020, 4, 2, 7, 32, 40, 196, DateTimeKind.Unspecified).AddTicks(4481), 60L, 97L },
                    { 75L, 1m, "Vero consequatur minus est consequatur quam inventore molestias ut tempore.", new DateTime(2020, 10, 2, 10, 7, 8, 664, DateTimeKind.Unspecified).AddTicks(9486), 84L, 97L },
                    { 28L, 38m, "Qui quos qui eius veritatis nihil deserunt nihil in at.", new DateTime(2020, 9, 21, 6, 37, 21, 199, DateTimeKind.Unspecified).AddTicks(7638), 1L, 64L },
                    { 9L, 5m, "At repellendus id quis consequatur dicta laudantium iste aliquam est.", new DateTime(2020, 8, 25, 13, 50, 28, 854, DateTimeKind.Unspecified).AddTicks(2309), 41L, 64L },
                    { 15L, 30m, "Rem qui cumque porro consequatur nihil sed quas praesentium molestiae.", new DateTime(2020, 10, 7, 14, 51, 59, 426, DateTimeKind.Unspecified).AddTicks(4095), 51L, 22L },
                    { 79L, 28m, "Eos eum perspiciatis autem ipsa voluptatem dolore accusantium quis cum.", new DateTime(2020, 11, 30, 4, 14, 53, 526, DateTimeKind.Unspecified).AddTicks(9919), 75L, 86L }
                });

            migrationBuilder.CreateIndex(
                name: "IX_EmployeeProject_ProjectId",
                table: "EmployeeProject",
                column: "ProjectId");

            migrationBuilder.CreateIndex(
                name: "IX_Invoice_ProjectId",
                table: "Invoice",
                column: "ProjectId");

            migrationBuilder.CreateIndex(
                name: "IX_Project_ClientId",
                table: "Project",
                column: "ClientId");

            migrationBuilder.CreateIndex(
                name: "IX_TimeEntry_EmployeeId",
                table: "TimeEntry",
                column: "EmployeeId");

            migrationBuilder.CreateIndex(
                name: "IX_TimeEntry_ProjectId",
                table: "TimeEntry",
                column: "ProjectId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "EmployeeProject");

            migrationBuilder.DropTable(
                name: "Invoice");

            migrationBuilder.DropTable(
                name: "TimeEntry");

            migrationBuilder.DropTable(
                name: "Employee");

            migrationBuilder.DropTable(
                name: "Project");

            migrationBuilder.DropTable(
                name: "Client");
        }
    }
}
